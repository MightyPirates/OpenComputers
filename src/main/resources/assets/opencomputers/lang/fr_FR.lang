# Blocks, items, gui, containers, keybinds and tooltips only
#
#

# Blocks
tile.oc.accessPoint.name=Point d'accès
tile.oc.adapter.name=Adaptateur
tile.oc.assembler.name=Assembleur électronique
tile.oc.cable.name=Câble
tile.oc.capacitor.name=Capaciteur
tile.oc.case1.name=Boitier (Niveau 1)
tile.oc.case2.name=Boitier (Niveau 2)
tile.oc.case3.name=Boitier (Niveau 3)
tile.oc.caseCreative.name=Boitier (Créatif)
tile.oc.chameliumBlock.name=Bloc de Chamélium
tile.oc.charger.name=Chargeur
tile.oc.disassembler.name=Désassembleur
tile.oc.diskDrive.name=Lecteur de disquettes
tile.oc.endstone.name=Pierre du néant
tile.oc.geolyzer.name=Géoliseur
tile.oc.hologram1.name=Projecteur d'hologramme (Niveau 1)
tile.oc.hologram2.name=Projecteur d'hologramme (Niveau 2)
tile.oc.keyboard.name=Clavier
tile.oc.microcontroller.name=Micro-contrôleur
tile.oc.motionSensor.name=Détecteur de mouvement
tile.oc.powerConverter.name=Convertisseur énergétique
tile.oc.powerDistributor.name=Distributeur énergétique
tile.oc.print.name=Impression 3D
tile.oc.printer.name=Imprimante 3D
tile.oc.raid.name=Raid
tile.oc.redstone.name=Redstone E/S
tile.oc.robot.name=Robot
tile.oc.robotAfterimage.name=Robot
tile.oc.screen1.name=Ecran (Niveau 1)
tile.oc.screen2.name=Ecran (Niveau 2)
tile.oc.screen3.name=Ecran (Niveau 3)
tile.oc.serverRack.name=Support de serveur
tile.oc.switch.name=Routeur
tile.oc.waypoint.name=Point de passage

# Items
item.oc.AbstractBusCard.name=Carte de bus abstraite
item.oc.Acid.name=Grog
item.oc.ALU.name=Unité de Logique Arithmétique (ULA)
item.oc.Analyzer.name=Analyseur
item.oc.APU0.name=Unité de Traitement Accélérée (UTA) (Niveau 1)
item.oc.APU1.name=Unité de Traitement Accélérée (UTA) (Niveau 2)
item.oc.APU2.name=Unité de Traitement Accélérée (UTA) (Créatif)
item.oc.ArrowKeys.name=Touches directionnelles
item.oc.ButtonGroup.name=Groupe de boutons
item.oc.CardBase.name=Base de carte
item.oc.Chamelium.name=Chamélium
item.oc.CircuitBoard.name=Plaque de circuit imprimé
item.oc.ComponentBus0.name=Bus des composants (Niveau 1)
item.oc.ComponentBus1.name=Bus des composants (Niveau 2)
item.oc.ComponentBus2.name=Bus des composants (Niveau 3)
item.oc.ControlUnit.name=Unité de contrôle (UC)
item.oc.CPU0.name=Processeur (Niveau 1)
item.oc.CPU1.name=Processeur (Niveau 2)
item.oc.CPU2.name=Processeur (Niveau 3)
item.oc.CuttingWire.name=Fil de coupe
item.oc.DebugCard.name=Carte de débogueur
item.oc.Debugger.name=Débogueur réseau
item.oc.Disk.name=Disque
item.oc.Drone.name=Drone
item.oc.DroneCase0.name=Boitier de drone (Niveau 1)
item.oc.DroneCase1.name=Boitier de drone (Niveau 2)
item.oc.DroneCase3.name=Boitier de drone (Créatif)
item.oc.eeprom.name=EEPROM
item.oc.FloppyDisk.name=Disquette
item.oc.GraphicsCard0.name=Carte graphique (Niveau 1)
item.oc.GraphicsCard1.name=Carte graphique (Niveau 2)
item.oc.GraphicsCard2.name=Carte graphique (Niveau 3)
item.oc.HardDiskDrive0.name=Disque dur (Niveau 1)
item.oc.HardDiskDrive1.name=Disque dur (Niveau 2)
item.oc.HardDiskDrive2.name=Disque dur (Niveau 3)
item.oc.hoverBoots.name=Bottes de vol plané
item.oc.InkCartridge.name=Cartouche d'encre
item.oc.InkCartridgeEmpty.name=Cartouche d'encre (Vide)
item.oc.InternetCard.name=Carte internet
item.oc.Interweb.name=Interweb
item.oc.IronNugget.name=Pépite de fer
item.oc.LinkedCard.name=Carte liée
item.oc.Manual.name=Manuel d'OpenComputers
item.oc.Memory0.name=Mémoire (Niveau 1)
item.oc.Memory1.name=Mémoire (Niveau 1.5)
item.oc.Memory2.name=Mémoire (Niveau 2)
item.oc.Memory3.name=Mémoire (Niveau 2.5)
item.oc.Memory4.name=Mémoire (Niveau 3)
item.oc.Memory5.name=Mémoire (Niveau 3.5)
item.oc.Microchip0.name=Puce électronique (Niveau 1)
item.oc.Microchip1.name=Puce électronique (Niveau 2)
item.oc.Microchip2.name=Puce électronique (Niveau 3)
item.oc.MicrocontrollerCase0.name=Boitier de microcontrôleur (Niveau 1)
item.oc.MicrocontrollerCase1.name=Boitier de microcontrôleur (Niveau 2)
item.oc.MicrocontrollerCase3.name=Boitier de microcontrôleur (Créatif)
item.oc.NetworkCard.name=Carte réseau
item.oc.NumPad.name=Pavé numérique
item.oc.Present.name=Un petit quelque chose...
item.oc.PrintedCircuitBoard.name=Circuit imprimé
item.oc.RawCircuitBoard.name=Plaque de circuit imprimé brute
item.oc.RedstoneCard0.name=Carte de Redstone (Niveau 1)
item.oc.RedstoneCard1.name=Carte de Redstone (Niveau 2)
item.oc.Server0.name=Serveur (Niveau 1)
item.oc.Server1.name=Serveur (Niveau 2)
item.oc.Server2.name=Serveur (Niveau 3)
item.oc.Server3.name=Serveur (Créatif)
item.oc.Tablet.name=Tablette
item.oc.TabletCase.name=Boitier de tablette (Niveau 1)
item.oc.TabletCase.name=Boitier de tablette (Niveau 2)
item.oc.TabletCase.name=Boitier de tablette (Créatif)
item.oc.Terminal.name=Terminal à distance
item.oc.TexturePicker.name=Ramasseur de texture
item.oc.Transistor.name=Transistor
item.oc.UpgradeAngel.name=Amélioration ange
item.oc.UpgradeBattery0.name=Amélioration batterie (Niveau 1)
item.oc.UpgradeBattery1.name=Amélioration batterie (Niveau 2)
item.oc.UpgradeBattery2.name=Amélioration batterie (Niveau 3)
item.oc.UpgradeChunkloader.name=Amélioration chargement de chunk
item.oc.UpgradeContainerCard0.name=Conteneur de carte (Niveau 1)
item.oc.UpgradeContainerCard1.name=Conteneur de carte (Niveau 2)
item.oc.UpgradeContainerCard2.name=Conteneur de carte (Niveau 3)
item.oc.UpgradeContainerUpgrade0.name=Amélioration de conteneur (Niveau 1)
item.oc.UpgradeContainerUpgrade1.name=Amélioration de conteneur (Niveau 2)
item.oc.UpgradeContainerUpgrade2.name=Amélioration de conteneur (Niveau 3)
item.oc.UpgradeCrafting.name=Amélioration d'artisanat
item.oc.UpgradeDatabase0.name=Amélioration de base de données (Niveau 1)
item.oc.UpgradeDatabase1.name=Amélioration de base de données (Niveau 2)
item.oc.UpgradeDatabase2.name=Amélioration de base de données (Niveau 3)
item.oc.UpgradeExperience.name=Amélioration d'expérience
item.oc.UpgradeGenerator.name=Amélioration de générateur
item.oc.UpgradeHover0.name=Amélioration de vol plané (Niveau 1)
item.oc.UpgradeHover1.name=Amélioration de vol plané (Niveau 2)
item.oc.UpgradeInventory.name=Amélioration d'inventaire
item.oc.UpgradeInventoryController.name=Amélioration du contrôleur d'inventaire
item.oc.UpgradeLeash.name=Amélioration de laisse
item.oc.UpgradeNavigation.name=Amélioration de navigation
item.oc.UpgradePiston.name=Amélioration de piston
item.oc.UpgradeSign.name=Amélioration de panneau d'E/S
item.oc.UpgradeSolarGenerator.name=Amélioration du générateur solaire
item.oc.UpgradeTank.name=Amélioration de réservoir
item.oc.UpgradeTankController.name=Amélioration du contrôleur de réservoir
item.oc.UpgradeTractorBeam.name=Amélioration du rayon tracteur
item.oc.WirelessNetworkCard.name=Carte de réseau sans-fils
item.oc.WorldSensorCard.name=Carte de capteur du monde
item.oc.wrench.name=Crisseur

# Entities
entity.oc.Drone.name=Drone

# GUI
oc:gui.Analyzer.Address=§6Addresse§f: %s
oc:gui.Analyzer.AddressCopied=Adresse copiée dans le presse-papier.
oc:gui.Analyzer.ChargerSpeed=§6Vitesse de charge§f: %s
oc:gui.Analyzer.ComponentName=§6Nom du composant§f: %s
oc:gui.Analyzer.Components=§6Nombre de composants connectés§f: %s
oc:gui.Analyzer.LastError=§6Dernière erreur§f: %s
oc:gui.Analyzer.RobotName=§6Nom§f: %s
oc:gui.Analyzer.RobotOwner=§6Propriétaire§f: %s
oc:gui.Analyzer.RobotXp=§6Expérience§f: %s
oc:gui.Analyzer.StoredEnergy=§6Energie stockée§f: %s
oc:gui.Analyzer.TotalEnergy=§6Energie totale§f: %s
oc:gui.Analyzer.Users=§6Utilisateurs§f: %s
oc:gui.Analyzer.WirelessStrength=§6Force du signal§f: %s
oc:gui.Assembler.Collect=Collectez la sortie
oc:gui.Assembler.Complexity=Complexité: %s/%s
oc:gui.Assembler.InsertCase=Insérez une partie de base
oc:gui.Assembler.InsertCPU=Insérez une UCP
oc:gui.Assembler.InsertRAM=Insérez un peu de mémoire
oc:gui.Assembler.Progress=Progression: %s%% (%s)
oc:gui.Assembler.Run=Assemble
oc:gui.Assembler.Warning.BIOS=BIOS
oc:gui.Assembler.Warning.GraphicsCard=Carte graphique
oc:gui.Assembler.Warning.Inventory=Amélioration d'inventaire
oc:gui.Assembler.Warning.Keyboard=Clavier
oc:gui.Assembler.Warning.OS=Moyen de démarrage
oc:gui.Assembler.Warning.Screen=Ecran
oc:gui.Assembler.Warnings=§eALERTE§7: Les composants recommandés sont manquant.
oc:gui.Chat.NewVersion=une nouvelle version est disponible: %s
oc:gui.Chat.TextureName=§7Le nom de la texture est §a%s§f.
oc:gui.Chat.WarningClassTransformer=Il y a §cerrors§f lancement dans le transformeur de classe. Veuillez vérifier ceci, en même temps que votre fichier log (plein) FML §alatest.log§f/§afml-server-latest.log§f, Merci !
oc:gui.Chat.WarningFingerprint=§cALERTE§f - Disparité d'empreinte digitale! Attendu '§a%s§f' mais eu '§e%s§f'. À moins que vous ne soyez un modder et que vous exécutiez la version deobfuscated du mod, Il est §lfortement§f recommendé de re-télécharger OpenComputers, parce que le JAR que vous utilisez peut avoir été falsifié.
oc:gui.Chat.WarningLink=Impossible d'ouvrir le lien : %s
oc:gui.Chat.WarningLuaFallback=Les bibliothèques natives Lua ne sont pas disponibles, les ordinateurs ne pourront pas persister en leur état. Ils réamorceront sur la recharge des chunks.
oc:gui.Chat.WarningPower=Aucun mod supporté produisant de la puissance. Les ordinateurs, écrans et autres composants §lne réclamerons pas§f d'énergie. Installez l'un de ses mods pour activer la puissance: BuildCraft, Electrical Age, IndustrialCraft2, Mekanism or Thermal Expansion. Mettez hors service la puissance dans la config pour supprimer cet avertissement.
oc:gui.Chat.WarningProjectRed=Vous utilisez une version de Project: Red qui est incompatible avec OpenComputers. Essayez de mettre à jour votre version de Project: Red.
oc:gui.Chat.WarningRecipes=il y a des erreurs au lancement de recettes. Certains éléments doivent être infabricables. Veuillez vérifier votre fichier log pour plus d'information.
oc:gui.Chat.WarningSimpleComponent=Un ajout (le votre ?) utilisant l'interface §aComposant Simple§f produit §equelquechose de mauvais§f. Le composant logique ne peut être inséré. Veuillez vérifier votre fichier log pour plus d'information.
oc:gui.Error.ComponentOverflow=Beaucoup trop de composants connectés à l'ordinateur.
oc:gui.Error.InternalError=Erreur interne, Veuillez lire le fichier log. Ceci est probablement une erreur.
oc:gui.Error.NoCPU=Pas d'UCP installé dans cet ordinateur.
oc:gui.Error.NoEnergy=Pas assez d'énergie.
oc:gui.Error.NoRAM=pas de mémoire installée dans cet ordinateur.
oc:gui.Error.OutOfMemory=Mémoire saturée.
oc:gui.Manual.Blocks=Blocs d'OpenComputers
oc:gui.Manual.Home=Accueil
oc:gui.Manual.Items=Éléments d'OpenComputers
oc:gui.Manual.Warning.BlockMissing=Bloc manquant.
oc:gui.Manual.Warning.ImageMissing=Image manquante.
oc:gui.Manual.Warning.ItemMissing=Élément manquant.
oc:gui.Manual.Warning.OreDictMissing=Entrée au dictionnaire de minerai manquante.
oc:gui.Raid.Warning=§4L'ajout d'un disque le nettoie.[nl] L'enlèvement d'un disque nettoie le raid.
oc:gui.Robot.Power=Énergie
oc:gui.Robot.TurnOff=Éteindre
oc:gui.Robot.TurnOn=Allumer
oc:gui.ServerRack.None=Aucun
oc:gui.ServerRack.Back=Arrière
oc:gui.ServerRack.Bottom=Bas
oc:gui.ServerRack.Left=Gauche
oc:gui.ServerRack.Right=Droite
oc:gui.ServerRack.Top=Haut
oc:gui.ServerRack.SwitchExternal=Externe
oc:gui.ServerRack.SwitchInternal=Interne
oc:gui.ServerRack.WirelessRange=Portée
oc:gui.Switch.TransferRate=Vitesse du cycle
oc:gui.Switch.PacketsPerCycle=paquets / cycle
oc:gui.Switch.QueueSize=Taille de la file
oc:gui.Terminal.InvalidKey=Clef invalide, très probablement qu'un autre terminal a dû nécessité le serveur.
oc:gui.Terminal.OutOfRange=Pas de signal.

# Containers
oc:container.AccessPoint=Point d'accès
oc:container.Adapter=Adapteur
oc:container.Case=Ordinateur
oc:container.Charger=Chargeur
oc:container.Disassembler=Désassembleur
oc:container.DiskDrive=Lecteur disque
oc:container.Printer=Imprimante
oc:container.Raid=Raid
oc:container.Server=Serveur
oc:container.ServerRack=Support de serveur
oc:container.Switch=Routeur
oc:container.TabletWrapper=Tablette

# Keybinds
key.materialCosts=Montrer les coût en matériaux
key.clipboardPaste=Coller le presse-papier

# Item / Block Tooltips
oc:tooltip.AccessPoint=Fonctionne comme un routeur, de plus il recois les paquets sans-fil et il transmet les paquets filaires au réseau sans-fil.
oc:tooltip.AbstractBusCard=Il permet d'interagir avec le bus abstait de §fStargateTech 2§7 lors de l'envoi et de la reception de paquets LIP.
oc:tooltip.Acid=Un produit semi-liquide très toxique, uniquement bu par certains pirates. Grâce à ses propriétés corrosives, il est très utile à la gravure de circuits imprimés.
oc:tooltip.Adapter=Utilisé pour contrôler des blocs n'étant pas des composants d'ordinateurs, comme des blocs Vanilla ou d'autres mods.
oc:tooltip.ALU=Ajoute des nombres pour que vous n'ayez pas à le faire. C'est peut-être mieux comme ça.
oc:tooltip.Analyzer=Utilisé pour afficher des informations sur des blocs, comme leur §faddresse§7 et leur §fnom de composant§7.[nl] Affiche aussi les erreurs en cas de crash d'un ordinateur.
oc:tooltip.APU=Ceci est une UTC avec une UTG intégrée (ou UTI), lorsque vous avez juste besoin d'un emplacement de carte supplémentaire.[nl] Composants supportés : §f%s§7[nl] Résolution maximum: §f%sx%s§7[nl] profondeur de couleur maxi: §f%s§7[nl] Opérations/tic: §f%s§7
oc:tooltip.Assembler=Il permet de construire des robots et d'autres dispositifs d'un certain nombre de pièces informatiques différentes.
oc:tooltip.Cable=Un moyen peu coûteux pour relier les ordinateurs entre eux.
oc:tooltip.Capacitor=Stocke l'énergie pour une utilisation ultérieure. Peut être chargé et déchargé très rapidement.
oc:tooltip.CardBase=Comme son nom l'indique, c'est le bloc de construction basique pour toutes les cartes.
oc:tooltip.Case=La tour est le bloc principal de l'ordinateur, et héberge ses §fcartes§7, sa §fMémoire RAM§7 et ses §fdisques durs§7.[nl] Emplacements: §f%s§7
oc:tooltip.Chamelium=Matière première pour impression 3D. Ne pas avaler : Peut mener à la cécité et au manque de présence provisoire.
oc:tooltip.ChameliumBlock=Joli et propre. Pratique pour formes teintées dans les impressions 3D, ou juste pour avoir un bloc propre, coloré, pour décorer votre base fantaisiste avec.
oc:tooltip.Charger=Transfère l'énergie depuis des capaciteurs pour les robots adjacents. La puissance du transfert dépends du §fsignal de redstone§7, ou une absence de signal ne charge pas les robots, et un signal maximum charge les robots le plus vite possible.
oc:tooltip.CircuitBoard=Hé ben, on y arrive. Peut être gravé pour obtenir un circuit imprimé.
oc:tooltip.ControlUnit=C'est une unité qui... controle... des trucs. On en a besoin pour faire un processeur. Donc, ouais, super important.
oc:tooltip.ComponentBus=Cette extention autorise aux serveurs de communiquer avec plus composants en même temps, Semblable à ce que les UCP font.[nl] Composants supportés : §f%s§7
oc:tooltip.CPU=Un composant essentiel pour tout ordinateur. La fréquence d'horloge est un peu douteuse, mais, vous vous attendiez à quoi avec un cadran solaire de poche ?
oc:tooltip.CPU.Architecture=Architecture: §f%s§7
oc:tooltip.CuttingWire=Utilisé pour couper des blocs d'argile en plaque de circuit imprimé. Se casse après utilisation, ce qui rends cet outil le moins efficace jamais utilisé.
oc:tooltip.DebugCard=Element en mode créatif, il autorise la manipulation du monde pour faciliter les tests. Utilisation à votre propre péril.
oc:tooltip.Debugger=Peut être utilisé pour sortir les information de débogue sur la grille réseau interne de OC. A utiliser seulement si instruit par un dev.
oc:tooltip.Disassembler=Sépare les éléments dans leur composants d'origine. §lAttention§7: les éléments ainsi récupérés ont %s%% de chance de ce briser dans le processus !
oc:tooltip.Disk=Moyen primitif qui peut être utilisé pour faire des appareils de stockage persistants.
oc:tooltip.DiskDrive.CC=Les disquettes ComputerCraft sont §asupportées§7.
oc:tooltip.DiskDrive=Permet de lire et d"écrire des disquettes. Peut être installé dans les robots pour permettre d'insérer des disquettes plus tard.
oc:tooltip.Drone=Les drones sont de légère unité de reconnaissance rapide avec un espace de chargement limité.
oc:tooltip.DroneCase=Ce boitier est utilisé pour construire des Drones dans l'assembleur. Il a des emplacement pour une petite quantité de composant et fournit la lévitation en pierre de néant alimentée.
oc:tooltip.EEPROM=Petit, stockage programmable qui contient le BIOS que les ordinateurs utilisent pour démarrer.
oc:tooltip.FakeEndstone=Presque aussi bon que la chose réelle, imite même sa flottabilité !
oc:tooltip.Geolyzer=Permet de scanner la dureté des blocs des environs. Ces informations peuvent être utiles pour produire un hologramme de la zone ou pour détecter les minerais.
oc:tooltip.GraphicsCard=Utilisé pour changer ce qui est affiché sur écran.[nl] Résolution maximum: §f%sx%s§7[nl] Couleurs maximales: §f%s§7[nl] Operations/tick: §f%s§7
oc:tooltip.HoverBoots=Sautez plus haut, tombez plus bas, marchez mieux. Ceci et plus, avec les nouvelles Bottes de vol plané (TM).
oc:tooltip.InkCartridge=Utilisé pour remplir d'encre les imprimantes 3D. Pour des raisons mystérieuses, elle ne doit pas rester dans l'imprimante.
oc:tooltip.InkCartridgeEmpty=Cette cartouche d'encre a été vidé totalement. Remplissez la avec des couleurs. Ou jetez la. Voyez comme je m'en soucie.
oc:tooltip.InternetCard=Cette carte permet de faire des requêtes HTTP et utiliser de véritable TCP sockets.
oc:tooltip.Interweb=Félicitation, vous avez gagné un (1) interweb. Vous pouvez y connecter en utilisant une carte internet. Prenez garde : n'alimentez pas les trolls.
oc:tooltip.IronNugget=Une pépite de fer. D'où son nom.
oc:tooltip.Keyboard=Peut être attaché à un écran pour permettre la saisie.
oc:tooltip.Hologram0=Un affichage volumétrique qui peut être contrôlé par des ordinateurs pour montrer des structures de voxel arbitraires.[nl] Résolution : §f48x32x48§7 [nl] Echelle maxi : §f3x§7 [nl] Colorimétrie : §fMonochrome§7
oc:tooltip.Hologram1=Un affichage volumétrique qui peut être contrôlé par des ordinateurs pour montrer des structures de voxel arbitraires.[nl] Résolution : §f48x32x48§7 [nl] Echelle maxi : §f4x§7 [nl] Colorimétrie : §fTricolore§7
oc:tooltip.LinkedCard=Elles sont fabriqué par paire et ne peuvent communiquer qu'avec leur Carte partenaire. Cependant, elles peuvent communiquer à travers n'importe quelle distance et même à travers les dimensions. L'énergie exigée pour envoyer un message est assez haute malgès tout.
oc:tooltip.LinkedCard_Channel=§8Canal : %s§7
oc:tooltip.Manual=Toutes les informations vous pourriez probablement avoir besoin sur OpenComputers. Et plus. Au prix incroyablement bas de... §oveuillez appuyer sur R pour continuer§7.
oc:tooltip.MaterialCosts=Prend [§f%s§7] pour les coûts des matériaux.
oc:tooltip.Materials=Materiaux :
oc:tooltip.Memory=Requis pour faire fonctionner les ordinateurs. Plus vous en avez, plus complexes les programmes seront utilisables.
oc:tooltip.Microchip=La puce anciennement circuit intégré. J'ai aucune idée du comment ça marche avec la redstone, mais ça marche.
oc:tooltip.Microcontroller=Les microcontrôleurs sont des ordinateurs résumés à l'essentiel. Ils sont destinés pour s'occuper de tâches très spécifiques, dirigant seulement l'unique programme que lui donne l'EEPROM qu'il intègre.
oc:tooltip.MicrocontrollerCase=Composant de base pour construire des microcontrôleurs. Placez-le dans un assembleur pour ajouter de nouveaux composants et assemblez un microcontrôleur.
oc:tooltip.MotionSensor=Peut détecter le mouvement d'êtres vivants à proximité. Demande une ligne de vue dégagée.
oc:tooltip.NetworkCard=Permet à des ordinateurs distants de communiquer en s'envoyant des messages.
oc:tooltip.PowerAcceptor=Vitesse de convertion d'énergie: §f%s/t§7
oc:tooltip.PowerConverter.BuildCraft=§fBuildCraft en MJ§7: §a%s:%s§7
oc:tooltip.PowerConverter.Factorization=§fCharges de Factorization§7: §a%s:%s§7
oc:tooltip.PowerConverter.IndustrialCraft2=§fIndustrialCraft² en EU§7: §a%s:%s§7
oc:tooltip.PowerConverter.Mekanism=§fMekanism en Joules§7: §a%s:%s§7
oc:tooltip.PowerConverter.ThermalExpansion=§fThermal Expansion en RF§7: §a%s:%s§7
oc:tooltip.PowerConverter.ResonantEngine=§fResonant Engine en Coulombs§7: §a%s:%s§7
oc:tooltip.PowerConverter=Convertis l'énergie d'autres mods en l'énergie requise pour faire fonctionner les ordinateurs.
oc:tooltip.PowerDistributor=Distribue l'énergie dans plusieurs réseaux. Utile pour partager cette énergie depuis un convertisseur vers différents sous-réseaux qui doivent rester séparés.
oc:tooltip.Present=... pour vos ennuis. Ouvrez ce cadeau pour une chance de recevoir quelques éléments d'OpenCompucters §kpsorti du chapeaut§7![nl]§8 quand c'est le bon momment de recevoir un cadeau.§7
oc:tooltip.Print.BeaconBase=§8Fonctionne comme une base de balise.
oc:tooltip.Print.LightValue=§8Lumière émise : %s.
oc:tooltip.Print.RedstoneLevel=§8Sortie Redstone : %s.
oc:tooltip.PrintedCircuitBoard=Le composant basique pour les cartes, la mémoire, etc.
oc:tooltip.Raid=Permet de combiner trois disques durs dans un plus grand système de fichiers qui pourra être utilisé par tous les ordinateurs connectés.
oc:tooltip.RawCircuitBoard=Peut être durci dans n'importe quel four.
oc:tooltip.Redstone=Permet de recevoir et d'émettre des signaux de redstone autour du bloc. Contrôlable par n'importe quel ordinateur connecté à ce bloc. En gros, une carte redstone externe.
oc:tooltip.RedstoneCard.ProjectRed=§fProjectRed§7 est §asupporté7.
oc:tooltip.RedstoneCard.RedLogic=§fRedLogic§7 est §asupporté§7.
oc:tooltip.RedstoneCard.RedNet=§fRedNet§7 est §asupporté§7.
oc:tooltip.RedstoneCard.WirelessCBE=§fWireless Redstone (ChickenBones)§7 est §asupporté§7.
oc:tooltip.RedstoneCard.WirelessSV=§fWireless Redstone (SlimeVoid)§7 est §asupporté§7.
oc:tooltip.RedstoneCard=Permet la réception et l'émission de signaux de redstone autour de l'ordinateur ou du robot.
oc:tooltip.Robot=Contrairement aux ordinateurs, les robots peuvent se déplacer et intéragir avec le monde comme un joueur le fait. Ils ne peuvent §opas§r§7 intéragir avec des composants d'ordinateur extérieurs, ceci dit !
# The underscore makes sure this isn't hidden with the rest of the tooltip.
oc:tooltip.Robot_Level=§fNiveau§7: §a%s§7.
oc:tooltip.Robot_StoredEnergy=§fEnergie stockée§7: §a%s§7.
oc:tooltip.Screen=Affiche du texte, contrôlé par une Carte graphique dans un Boitier.[nl] Résolution maximum: §f%sx%s§7[nl] Couleurs maximales: §f%s§7
oc:tooltip.Server=Ceci est un serveur, il y en a beaucoup comme ca, mais celui-ci peut être amélioré avec des composants bien plus qu'un ordinateur peut l'être. Il peut être placé dans un support de serveur.[nl] Numbre de terminaux supportés : §f%s§7
oc:tooltip.Server.Components=Composants installés :
oc:tooltip.ServerRack=Permet l'installation jusqu'à quatre serveurs. Utilisez un terminal à distance pour avoir accès aux serveurs placés dans ce support.
oc:tooltip.Switch=Permet de connecter différents réseaux entre eux. Seulement des messages réseau seront transmis, les composants ne seront pas visibles via celui ci. A utiliser pour séparer des réseaux tout en leur permettant de communiquer entre eux, grâce aux Cartes réseau, par exemple.
oc:tooltip.Tablet=Une tablette, pour une Lua fraiche en route. Peut être forcé à l'arrêt par un accroupi-clique droit.
oc:tooltip.TabletCase=Boitier de tablettes de base. Placez-le dans l'assembleur pour ajouter des composants et créez une tablette.
oc:tooltip.Terminal=Permet de contrôler un serveur à distance, tant que vous êtes à portée de lui. Fonctionne comme un écran-clavier portable. Maj-clique droit un serveur du support pour le lier au terminal.
oc:tooltip.Tier=§8Niv. %s
oc:tooltip.TooLong=Maintenez la touche [§f%s§7] pour plus d'informations.
oc:tooltip.Transistor=Un élément basique constituant la plupart des pièces d'un ordinateur. Il est un peu tordu, mais il fait son boulot.
oc:tooltip.UpgradeAngel=Permet aux robots pour placer des blocs d'air mince, même s'il n'y a aucun point de référence.
oc:tooltip.UpgradeBattery=Augmentez la quantité d'énergie qu'un robot peut stocker, le permettant de marcher plus longtemps sans devoir être rechargé. [nl] Capacité : §f%s§7
oc:tooltip.UpgradeChunkloader=Si un robot se déplace dans une forêt sans personne à proximité, se déplace-il vraiment ? Cette amélioration s'assure qu'il le fait. Elle garde le chunk du robot chargé, mais consomme continuellement de l'énergie lors qu'il est actif.
oc:tooltip.UpgradeContainerCard=Cette amélioration de conteneur permet l'installation ou le retrait dynamique d'une carte du robot assemblé. [nl] Niv. Maximum : §f%s§7
oc:tooltip.UpgradeContainerUpgrade=Cette amélioration de conteneur permet l'installation ou le retrait dynamique d'une amélioration du robot assemblé. [nl] Niv. Maximum : §f%s§7
oc:tooltip.UpgradeCrafting=Permet aux robots d'utiliser le coin en haut à gauche de leur inventaire comme table d'artisanat. Vous devez respecter la position des objets comme pour un artisanat normal.
oc:tooltip.UpgradeDatabase=Cette amélioration permet de stoquer les information de pile d'éléments pour une utilisation future d'autres composants. Notez que ceci doit être configuré à la main.[nl] Entrées supportées : §f%s§7
oc:tooltip.UpgradeExperience=Cette amélioration permet aux robots d'accumuler de l'experience en exécutant diverses opérations. Plus ils gagnent d'expérience, plus ils peuvent stocker de l'énergie, miner plus rapidement et utiliser les outils plus efficacement.
oc:tooltip.UpgradeGenerator=Utilisé pour générer de l'énergie directement sur un robot, indépendament d'un chargeur. Consume du comburant (ex: charbon) pour une génération sur la durée, en fonction de l'efficacité du combustible. [nl] §fEfficacité§7: §a%s%%§7
oc:tooltip.UpgradeInventory=Cette amélioration donne un espace d'inventaire au robot. Sans l'une d'elles, les robots ne seraient pas capable de stocker des éléments en interne.
oc:tooltip.UpgradeInventoryController=Cette amélioration permet au robot plus de contrôle sur ses interactions avec les inventaires externes, et leur permet d'échanger leurs outils avec un élément de son inventaire.
oc:tooltip.UpgradeNavigation=Utilisé pour déterminer la position et l'orientation d'un robot. Cette position est relative au centre de la zone (affichée sur une carte) ou l'amélioration a été créée.
oc:tooltip.UpgradePiston=Cette amélioration est très rentre-dedans. Elle permet de déplacer des blocs comme lors de l'utilisation d'un piston. malgré tout, cela §lne déplace pas§7 les entités.
oc:tooltip.UpgradeSign=Permets de lire et d'écrire sur des panneaux.
oc:tooltip.UpgradeSolarGenerator=Utilisé pour générer de l'énergie directement sur un robot, indépendament d'un chargeur, via le soleil. Aucun bloc ne doit se trouver au-dessus du robot pour que cette génération fonctionne. Génère de l'énergie à %s%% de la vitesse d'un moteur stirling (BuildCraft).
oc:tooltip.UpgradeTank=Cette amélioration donne un réservoire de fluides au robot. Sans l'une d'elles, les robots ne seraient pas capable de stocker des fluides en interne.
oc:tooltip.UpgradeTankController=Cette amélioration permet au robot plus de contrôle sur ses interactions avec les réservoirs externes, et leur permet de transférer les fluides avec un élément réservoir de fluide de son inventaire.
oc:tooltip.UpgradeTractorBeam=Equipe le robot avec une technologie extrêmement avancée, surnommé "l'aimant d'éléments". Cela lui permet de prendre des éléments n'importe où 3 blocs autour de son emplacement.
oc:tooltip.WirelessNetworkCard=Permet l'envoi de messages réseaux sans fil. Pensez à régler la §fforce du signal§7, sinon aucun paquet ne sera envoyé!

# NEI Usage Pages
item.oc.AbstractBusCard.usage=This card allows computers, servers and robots to interact with StargateTech2's abstract bus. When the card is installed, these blocks will connect to the abstract bus and a component becomes available to the machine that can be used to send messages across the abstract bus. Incoming abstract bus messages are converted to signals that are injected into the machine.
item.oc.Analyzer.usage=The §oAnalyzer§r is a handy tool for getting some information about OpenComputers-related blocks in the world. Simply (sneak-)activate a block to get some information printed to the chat. This ranges from basic things like the address of components, to power levels in the subnetwork the block is in, and information on the error lead to a computer to crash, for example.[nl][nl]Another useful functionality is that when using the using the analyzer on a block while holding down [Ctrl] the address of the block component will be copied to the clipboard.
item.oc.ComponentBus.usage=A §oComponent Bus§r is a server-specific upgrade that allows the server to communicate with more components at the same time, without shutting down. Like with CPUs, higher tier buses provide higher component limits.
item.oc.CPU.usage=The §oCentral Processing Unit§r is a core part for each computer. It defines the architecture of the computer, and the number of components that can be connected to the computer before it stops working. Higher tier CPUs also provide a higher per-tick direct call limit to the computer - in simpler terms: better CPUs run faster.
item.oc.DebugCard.usage=The §oDebug Card§r is a non-craftable item that was originally only intended to make debugging things easier, by automating some processes. It has since gotten a bunch more functionality, making it quite useful for custom map-making.
item.oc.eeprom.usage=The §oEEPROM§r is what contains the code used to initialize a computer when it is being booted. This data is stored as a plain byte array, and may mean different things to different CPU architectures. For example, for Lua it is usually a small script that searches for file systems with an init script, for other architectures it may be actual machine code.
item.oc.FloppyDisk.usage=The §oFloppy Disk§r is the cheapest and smallest type of storage medium in OpenComputers. It is a handy early game way of storing data and transferring it between computers and robots. You may also find floppy disks with useful programs on them in dungeon chests.[nl][nl]Beware: shift-rightclicking while holding a floppy disk in your hand will wipe the floppy disk!
item.oc.GraphicsCard.usage=The §oGraphics Card§r is an essential part for most computers and allows the computer to display text on a connected §oScreen§r. Graphics cards come in several tiers, and like screens, support different resolutions and color depths.[nl][nl]Another noteworthy difference for the different graphics card tiers is the number of operations a graphics card can perform per tick. The values listed in the graphics cards' tooltip is representative for a computer with a tier two CPU. Tier one CPUs perform slightly slower, tier three CPUs slightly faster. The numbers listed are for the different operations provided by a GPU: copy, fill, set, setBackground and setForeground, respectively.
item.oc.HardDiskDrive.usage=The §oHard Disk Drives§r are the higher tier storage medium in OpenComputers. There are no speed differences in the storage media provided by OpenComputers, they only differ in the amount of disk space they provide. There are also some devices that can only use disk drives, no floppies (although servers could use an external disk drive, for example).[nl][nl]Beware: shift-rightclicking while holding a hard disk in your hand will wipe the disk!
item.oc.InternetCard.usage=The §oInternet Card§r grants computers access to the internet. It provides ways to perform simple HTTP requests, as well as to open plain TCP client sockets that can be read and written to.[nl][nl]Installing an internet card in a computer will also attach a custom file system that contains a few internet related applications, such as one for downloading and uploading snippets from and to pastebin as well as a wannabe wget clone that allows downloading data from arbitrary HTTP URLs.
item.oc.LinkedCard.usage=The §oLinked Card§r is a specialized but advanced version of a network card. It can only operate in pairs, providing a point-to-point communication between the paired cards. In return the distance the cards can communicate over is unlimited. They can even communicate when in different dimensions.
item.oc.Memory.usage=§oMemory§r is, like a §oCPU§r, an essential part in all computers. Depending on the CPU's architecture, the memory has a very essential effect on what a computer can and cannot do. For the standard Lua architecture, for example, it controls the actual amount of memory Lua scripts can use. This means that to run larger and more memory-intensive programs, you'll need more RAM.
item.oc.MicrocontrollerCase.usage=The §oMicrocontroller Case§r is the base part when building microcontrollers in the §oAssembler§r. Microcontrollers are very primitive computers. They may only contain a very limited number of components, and are intended to be used in very specific use-cases, such as transforming or reacting to redstone signals, or processing network messages.[nl][nl]They do not have an actual file system. All programming must be done using the EEPROM chip built into them. This chip can be swapped for another one by crafting a microcontroller with the chip to insert. The old EEPROM will be returned to your inventory.[nl][nl]While they also require power to run, they consume very little energy.
item.oc.NetworkCard.usage=The §oNetwork Card§r allows computers to send and receive network messages. Such messages (or packets) can be either sent as a broadcast, in which case they will be sent to all nodes in the same subnetwork, or sent to specific target, in which case they will only be received by the node with the specified target address. §oSwitches§r and §oAccess Points§r can be used to bridge multiple subnetworks by relaying messages between the subnetworks they are connected to. It is also possible to send a targeted message if the receiver is in another subnetwork, if the networks are connected via one or more switches.
item.oc.RedstoneCard.usage=The §oRedstone Card§r allows computers to read and emit analog redstone signal in adjacent blocks. When an ingoing signal strength changes, a signal is injected into the computer.[nl][nl]If there are any supported mods present that provide bundled redstone facilities, such as RedLogic, Project Red or MineFactory Reloaded, or mods that provide wireless redstone facilities such as WR-CBE and Slimevoid's Wireless mod, a second tier card is available that allows interacting with these systems.[nl][nl]The side provided to the several methods are relative to the orientation of the computer case / robot / server rack. That means when looking at the front of the computer, right is at your left and vice versa.
item.oc.Server.usage=§oServers§r are a form of higher tier computer. They can be configured by holding them in the hand and rightclicking - like opening a backpack or ender pouch, for example. After inserting CPU, memory and cards, the server has to be placed inside a §oServer Rack§r. For more information see the server rack entry.
item.oc.TabletCase.usage=The §oTablet Case§r is the base part when building tablets in the §oAssembler§r. Tablets are very compact and portable computers. They can host a small number of select upgrades, but obviously cannot interact with the world like computer cases can (using simple §oNetwork Cards§r or §oRedstone Cards§r for example). Upgrades and cards that cannot be used in tablets can generally not be placed into the assembler, so if you can install an upgrade, you can usually assume that you will also be able to use it.[nl][nl]They must also remain in a player's inventory to continue running. When dropped or placed into some other inventory, they will turn off after a short amount of time.
item.oc.Terminal.usage=The §oRemote Terminal§r can be used to remote control §oServers§r. To use it, sneak-activate a server that is installed in a §oServer Rack§r (click on the server rack block in the world, targeting the server to bind the terminal to). When a terminal is bound to a server, a virtual screen and keyboard get connected to the server. This can lead to unexpected behavior if another real screen and/or keyboard is connected to the server, so this should be avoided. When rightclicking with the terminal in hand after binding it, a GUI will open, the same as when opening the GUI of a screen with an attached keyboard.[nl][nl]Multiple terminals can be bound to one server, but they will all display the same information, as they will share the virtual screen and keyboard. The number of terminals that can be bound to a server depends on the server's tier. The range in which the terminals work can be configured in the server rack's GUI.
item.oc.UpgradeChunkloader.usage=The §oChunkloader Upgrade§r can be installed in robots to allow them too keep the chunk they are in - as well as the surrounding chunks - loaded. This consumes quite a bit of energy, however. The chunkloader can be turned on and off using the component the upgrade exposes to the robot.[nl][nl]The upgrade is automatically enabled when the robot powers up, and automatically disabled when the robot powers down.
item.oc.UpgradeContainerCard.usage=The §oCard Container§r is a container type upgrade for robots that provides a slot in the finished robots into which cards can be placed. The tier of card that slot can hold is equal to the tier of the container. Unlike normal upgrades, the complexity of containers is twice their tier.
item.oc.UpgradeContainerUpgrade.usage=The §oUpgrade Container§r is a container type upgrade for robots that provides a slot in the finished robots into which normal upgrades can be placed. The tier of upgrade that slot can hold is equal to the tier of the container. Unlike normal upgrades, the complexity of containers is twice their tier.
item.oc.UpgradeCrafting.usage=The §oCrafting Upgrade§r allows robots to craft shaped and shapeless recipes using items in their inventory. When crafting, the top-left three by three grid in the robot's inventory is used as the crafting grid. Items have to be located as they would be in a normal crafting table. Results will be placed back into the robot's inventory. As when picking up items, the result will preferrably placed into the selected slot, and failing so continue to search forwards until an empty slot is found. If no inventory space remains, the result will be dropped into the world.
item.oc.UpgradeDatabase.usage=The §oDatabase Upgrade§r can be configured to store a list of item stack representations, which can then be used by other components. This is particularly useful for items that are differentiated purely based on their NBT data, which is not part of the item stack descriptor returned by callbacks.[nl][nl]To configure a database, open it by right-clicking it while holding it in your hand, then placing the stacks you wish to configure it with into the top inventory. This will store a "ghost stack", i.e. no "real" items are stored in the database.
item.oc.UpgradeExperience.usage=The §oExperience Upgrade§r is a very special upgrade, as it allows robots to collect experience by performing various actions, such as digging up ores and killing entities. Robots can gain up to 30 levels, and gain passive bonuses with each level, including faster harvest speeds and increased energy buffer capacity. Robots at level ten and above will get a golden tint, robots at level twenty and above will get a diamond tint.[nl][nl]The actual experience is stored inside the upgrade, meaning if the upgrade is transferred to another robot, so is the experience.
item.oc.UpgradeGenerator.usage=The §oGenerator Upgrade§r allows robots to refuel on the go. Currently it only supports solid fuels, such as coal. It has an internal intentory that can store one item stack of fuel. Surplus fuel can be removed from the generator using the according API method. When removing a generator upgrade from a robot its contents will be dropped into the world.[nl][nl]The efficiency of generators is lower than that of usual generators of other mods, meaning it is usually more fuel efficient to power robots using a §oCharger§r.
item.oc.UpgradeInventory.usage=The §oInventory Upgrade§r provides inventory slots to robots. For each inventory upgrade a robot will gain an addition 16 inventory slots, up to a maximum of 64 slots in total. If no inventory upgrade is installed in a robot it will not be able to store or pick up items.
item.oc.UpgradeInventoryController.usage=The §oInventory Controller Upgrade§r provides extended inventory interaction to robots. It allows the robots to excplicitly target slots in external inventories when dropping or sucking items. It also allows robots to read detailed information about item stacks. Lastly it provides robots with a means to change their equipped tool without external help.[nl][nl]This upgrade can also be placed in §oAdapters§r, where it provides similar inspection methods for inventories adjacent to the adapter as it does to the robot. It does not allow the adapter to move items into or out of inventories, however. This feature is only available in robots.
item.oc.UpgradeNavigation.usage=The §oNavigation Upgrade§r provides location and orientation information to §oRobots§r and §oTablets§r it is installed in. The coordinates the upgrade provides are relative to the center of the map that was used to craft the upgrade, and the functional range is based on the size of that map.[nl][nl]Navigation upgrades can be re-crafted with a map to replace the map in the upgrade with another one. The old map will be returned.
item.oc.UpgradeTank.usage=The §oTank Upgrade§r allows robots to store fluids. Each tank can only hold a single type of fluids, and provides a volume of 16 buckets (16000mB). Robots can drain liquids from the world and from other fluid tanks, and can fill the fluids back into fluid tanks, and, when supported by the fluid, place them back into the world. There is no limit to the number of tanks that can be installed in a robot.
item.oc.UpgradeTankController.usage=The §oTank Controller Upgrade§r is to fluid tanks what the §oInventory Controller Upgrade§r is to normal inventories. It allows robots to query more detailed information about tanks in and next to the robot.[nl][nl]This upgrade can also be installed in §oAdapters§r, allowing computers connected to the adapter to query information about the tanks adjacent to the adapter.
item.oc.UpgradeTractorBeam.usage=The §oTractor Beam Upgrade§r allows robots to pick up items in a three block radius around them. This can be highly useful when employing robots in tree or other farms, or when having them use tools that break multiple blocks around them (such as Tinker's Construct tools). Each operation will try to suck a single item stack in range and consume some energy.
item.oc.WirelessNetworkCard.usage=The §oWireless Network Card§r is an upgraded §oNetwork Card§r than, in addition to wired network messages, can also send and receive wireless network messages. The signal strength directly controls the distance up to which a sent message can be received, where the strength is equal to that distance in blocks.[nl][nl]The higher the signal strength, the more energy it will take to send a single message. The terrain between the sender and receiver also determines whether a message will be successfully transmitted or not. To penetrate a block, the blocks hardness is subtracted from the signal strength - with the minimum being one for air blocks. If no strength remains to reach the receiver, the message will not be received. This is not an exact science however - sometimes messages may still reach the target. In general you'll want to make sure the line of sight between sender and receiver are clear, however.
tile.oc.accessPoint.usage=The §oAccess Point§r is the wireless version of the switch block. It can be used to separate subnetworks so that machines in them will not see components in other networks, while still allowing to send network messages to the machines in other networks.[nl][nl]In addition to that, this block will resend any wired messages it receives as wireless ones, wireless messages it receives as wired messages, and repeat wireless messages as wireless ones.[nl][nl]Switches and access point do §lnot§r keep track of which packets they relayed recently, so avoid cycles in your network, or you may receive the same packet multiple times.[nl][nl]Packets are only re-sent a certain number of times, so chaining an arbitrary number of switches or access points is not possible.
tile.oc.adapter.usage=The §oAdapter§r allows computers to interact with a number of blocks that are not part of OC, such as blocks from Minecraft itself (like the Furnace) and from a number of other mods. Supported blocks adjacent to the adapter will show up as components in computers connected to the adapter.[nl][nl]In addition to this, the adapter provides a slot for a few select upgrades. For example, the §oInventory Controller Upgrade§r allows computers to query more information from an inventory adjacent to the adapter, similar to when the upgrade is installed in a robot, and a §oTank Controller Upgrade§r provides similar functionality for fluid tanks next to the adapter.
tile.oc.assembler.usage=The §oAssembler§r is an advanced workstation that can be used to build more complex electronic devices, such as §oRobots§r and §oTablets§r. They usually require a relatively large amount of energy to assemble these devices, to it is recommended to power them sufficiently.[nl][nl]To build a device using an assembler, first insert the base part for that device. For robots that is a computer case of any tier, for tablets that is a tablet case. Continue to insert any parts you would like the device to contain. Take particular care to provide an operating system, or a possibility to install one later on (for robots you can install a disk drive to insert and remove floppies later on, for example).[nl][nl]Also note that for robots to have a screen you need to install a tier one screen in them, and to allow typing on the screen you also need to install a keyboard. For tablets the screen is pre-installed in the tablet case, but you still need to install a keyboard if you wish to type on your tablet.[nl][nl]Once everything is in place, press the start button and wait for the device to be assembled and charged. It is important to remember that you §lcannot§r change the device after it has been assembled. If you forgot something or made a mistake, you will have to disassemble the device completely using the §oDisassembler§r, which has a slight chance of breaking parts in the process.
tile.oc.cable.usage=The §oCable§r simply serves as a way of connecting computers and machines that are far apart. If you have a compact build where all components touch each other (directly or indirectly, most blocks also behave the same way as cables) you will usually not need cables.[nl][nl]Cables can be colored using any kind of dye. Colored cables will only connect to cables of the same color and to light gray colored cables - the default color. This can be useful for running cables for multiple subnetworks in parallel, without using covers.[nl][nl]Speaking of which, cables can be covered using either Forge MultiPart covers or immibis Microblocks covers.
tile.oc.capacitor.usage=The §oCapacitor§r has one job, storing a bunch of energy, either as a failsafe or for quick use. Unlike when converting energy from other mods' power systems to the internal energy format, transfer inside a single OC subnetwork is pretty much instantaneous, so it can be of advantage to store some energy internally, for tasks that consume a lot of energy, such as assembling devices in the §oAssembler§r or charging §oRobots§r.[nl][nl]The storage efficiency of capacitors increases the more capacitors are in their direct and indirect vicinity. For example, two capacitors directly next to each other will have a higher storage capacity than the sum of two separated capacitors. This adjacency bonus applies for capacitors up to two blocks away, with slightly less of a bonus for capacitors two blocks away than for capacitors one block away.
tile.oc.case.usage=The §oComputer Case§r is the most basic computer you can build, and usually what you'll get started with. The different tiers of computers have a different layout of slots available for parts, as well as increasing level of supported component tier (indicated by the roman numeral in applicable slots).[nl][nl]To get a running computer you'll need to install a §oCPU§r and some §oMemory§r (RAM) in a computer case. You'll usually also want to install a §oGraphics Card§r to be able to display text on a connected screen, and a §oHard Drive§r to install an operating system on (after booting from an OS floppy from an external §oDisk Drive§r for the first time, for example).[nl][nl]Computers can be upgraded using several different cards. For example, using a §oRedstone Card§r computers are able to read and emit redstone signals. Using §oNetwork Cards§r they can send and receive network messages, allowing them to communicate with other computers.[nl][nl]If a computer stops working / crashes, try using the §oAnalyzer§r tool on it (sneak-activate) to see the error message that caused the computer to stop.[nl][nl]Computer cases can be dyed using any dye. This is purely for aesthetic reasons, and has no practical implications.[nl][nl]Computer cases also serve as the base part when building robots in the §oAssembler§r. The different tiers determine the available slots for building the robot. When using a creative case, the robot will also provide itself with power, as does the normal creative case.
tile.oc.charger.usage=The §oCharger§r is used to charge devices such as §oRobots§r and §oTablets§r. A charger has to be activated by applying a redstone signal to it. The relative charge speed is based on the applied redstone signal's strength, with a strength of 15 meaning a charge speed of 100%.[nl][nl]Note that this logic can be inversed by hitting the charger with a BuildCraft compatible wrench. In inversed mode the charger defaults to 100% charge speed, and a higher redstone signal will result in a slower charge speed.[nl][nl]When a tablet is placed in the charger, its first hard drive is also exposed to computers connected to the charger, similar to how §oFloppies§r in §oDisk Drives§r are. This allows copying data onto or from a tablet, if desired.
tile.oc.disassembler.usage=The §oDisassembler§r can be used to deconstruct most items in OpenComputers into their original parts. This is mostly useful to reclaim materials from old parts that are no longer useful, or to decompose devices that are either no longer needed or built broken (e.g. robots without an operating system).[nl][nl]Disassembling items takes a relatively long time, and quite some energy. It also has a certain risk to destroy the reclaimed items - this chance is applied to each extracted item - so be sure to not carelessly throw things into the disassembler.
tile.oc.diskDrive.usage=The §oDisk Drive§r can be used to read §oFloppies§r using a computer connected to the disk drive. This is useful to get started, since the lower tier computer cases do not have a built-in floppy slot, and you'll need an operating system to get started - which usually only come on floppy disks (such the craftable OpenOS one).[nl][nl]It can also be installed in robots to allow inserting an removing floppy disks into and from the robot at any time, which can be very useful, since the only other way to transfer data from a robot is using networking - for example using §oNetwork Cards§r.
tile.oc.geolyzer.usage=The §oGeolyzer§r can be used by computers to scan the terrain surrounding the geolyzer for the blocks' approximate hardness. This can be useful to generate maps of the area to display on §oHologram Projectors§r as well as to detect potentially valuable blocks (ores are usually harder than dirt and stone).[nl][nl]The geolyzer can also be installed in robots as an upgrade to allow them to scan their surroundings. Performing a scan will consume some energy, though, so using it excessivly may quickly drain a robot's batteries.
tile.oc.keyboard.usage=A §oKeyboard§r is needed to type text on §oScreens§r, be they in the world or built into devices such as §oRobots§r or §oTablets§r.[nl][nl]For a keyboard to work with a screen in the world, it has to be placed next to the screen, facing that screen, or placed directly on the screen (on top or on one of its sides). You can tell that a keyboard is "connected" to a screen if by right-clicking the keyboard the screen's GUI opens up.
tile.oc.hologram.usage=The §oHologram Projector§r is a volumetric display, i.e. it provides a three dimensional array of voxels that can be individually enabled or disabled by a connected computer. The second tier projector, while having the same resolution as the tier one projector, supports displaying the individual voxels in three different colors.[nl][nl]Holograms can be rotated along their vertical axis by hitting them with a BuildCraft compatible wrench on their top or bottom. This can save some effort, so that the output doesn't have to be transformed on the software side.
tile.oc.motionSensor.usage=The §oMotion Sensor§r allows computers to detect movement of living entities. If an entity moves faster than a set threshold, a signal will be injected into computers connected to the motion sensor. The threshold can be configured via the component the motion sensor exposes to connected computers.[nl][nl]Movement is only detected if it happens within a radius of eight blocks around the motion sensor, and if there is a direct line of sight from the block to the entity that moved.
tile.oc.powerConverter.usage=The §oPower Converter§r serves as the fastest way to convert energy from other mods' power systems to OpenComputers' internal energy. If you only run a simple computer you probably won't need a converter. If you have a large capacitor bank that you only drain every now and then, you probably won't need one, either. However, if you wish to directly power an §oAssembler§r or §oCharger§r, it is usually a good idea to use a converter, instead of directly connecting them to external power.
tile.oc.powerDistributor.usage=The §oPower Distributor§r is for energy what the §oSwitch§r is for network messages. It allows several subnetworks to share their energy, without components being exposed to computers in other networks. It operates by regularly "balancing" the energy in all subnetworks it is connected to, so that the §lrelative§r amount of energy is the same in them.
tile.oc.raid.usage=The §oRaid§r block houses three hard drives which will be combined into a single file system. This combined file system has the size of the sum of the capacities of the individual hard drives and is available to all computers connected to the raid.[nl][nl]The raid only works (and shows up as a file system) when three disks are present. The disks may differ in size.[nl][nl]Beware that adding a hard drive to the raid block will wipe it of its contents. Removing a single disk from a complete raid will also wipe the raid. Adding the disk back in will §lnot§r restore it, the raid's new file system will not contain any files.
tile.oc.redstone.usage=The §oRedstone I/O§r block can be used to remotely read and emit redstone signals. It behaves like a hybrid of a tier one and two §oRedstone Card§r, in that it can read and emit simple analog as well as bundled signals, but cannot read or emit wireless redstone signals.[nl][nl]When providing a side to the methods of the component exposed by this block, the directions are the global principal directions, i.e. it is recommended to use sides.north, sides.east and so on.[nl][nl]Like the redstone card, this block injects a signal into connected computers when the state of a redstone signal changes - both for analog as well as for bundled signals.
tile.oc.screen.usage=A §oScreen§r is used in combination with a §oGraphics Card§r to allow computers to display text. Different screen tiers have different capabilties, that being that they support different resolutions and color depths, ranging from very low resolution, monochrome displays, to very high resolutions with up to 256 different colors.[nl][nl]The available resolution and color depth depends on the weakest link. When using a tier one graphics card with a tier three screen, only the tier one resolution and color depth is usable.[nl][nl]Screens can be placed next to each other to form multi-block screens. This has no impact on the available resolution. To control how adjacent screens connect, screens can also be dyed using any dye. Screens with different colors will not connect. Screens with different tiers will never connect, even if they have the same color.[nl][nl]Tier two and tier three screens also support mouse input. Clicks can either be performed in a screen's GUI (which can only be opened if a keyboard is connected to the screen), or by sneak-activating a screen empty-handed. Note that whether the GUI opens when sneak- or normally activating a screen can be controlled via the component it exposes to connected computers.
tile.oc.serverRack.usage=A §oServer Rack§r houses up to four §oServers§r. A server is a higher tier computer, which can only run when inside a server rack. Servers can be remote controlled using a §oRemote Terminal§r. The number of terminals that can be connected to a single server at a time depends on the tier of the server. The distance up to which the remote terminals work can be configured in the rack's GUI. Higher values have a higher constant energy draw.[nl][nl]Each server in a server rack can only communicate with one "face" of the server rack at a time - or none at all. Which side each server is connected to can be configured in the server rack's GUI. Beware that the sides are from the point of view of the server rack, i.e. if you are looking at the front of the server rack, right will be to your left and vice versa.[nl][nl]Server racks act as §oSwitch§r and §oPower Distributor§r in one. The switch mode of the server rack can be configured in its GUI, with the two options being internal and external. In external mode the server rack will behave like a normal switch. In internal mode, messages are only passed to the servers in the rack, they will not be automatically relayed to the other faces of the rack. Servers will still be able to send messages to each other. This allows using server racks as advanced switches that can perform filter and mapping operations, for example.
tile.oc.switch.usage=The §oSwitch§r can be used to allow different subnetworks to send network messages to each other without exposing components to computers in other networks. Keeping components local is usually a good idea, to avoid computers using the wrong screen or to avoid component overflows to happen (in which computers will crash / not start anymore).[nl][nl]There is also a wireless variation of this block, the §oAccess Point§r, which will also relay messages wirelessly.[nl][nl]Switches and access point do §lnot§r keep track of which packets they relayed recently, so avoid cycles in your network, or you may receive the same packet multiple times.[nl][nl]Packets are only re-sent a certain number of times, so chaining an arbitrary number of switches or access points is not possible.

# NEI Integration
nei.options.inventory.oredict=Montrez les noms OreDictionary
nei.options.inventory.oredict.true=Vrai
nei.options.inventory.oredict.false=Faux

# Waila Integration
option.oc.address=Adresse
option.oc.componentName=Nom du composant
option.oc.energy=Énergie
