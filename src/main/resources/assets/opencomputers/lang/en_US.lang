# This is the english master file for localizations. It will always be the most
# up-to-date version, so other localizations should be based on this one.
# Use [nl] to for a line break.

# Blocks
tile.oc.accessPoint.name=Access Point
tile.oc.adapter.name=Adapter
tile.oc.assembler.name=Electronics Assembler
tile.oc.cable.name=Cable
tile.oc.capacitor.name=Capacitor
tile.oc.case1.name=Computer Case (Tier 1)
tile.oc.case2.name=Computer Case (Tier 2)
tile.oc.case3.name=Computer Case (Tier 3)
tile.oc.caseCreative.name=Computer Case (Creative)
tile.oc.chameliumBlock.name=Block of Chamelium
tile.oc.charger.name=Charger
tile.oc.disassembler.name=Disassembler
tile.oc.diskDrive.name=Disk Drive
tile.oc.geolyzer.name=Geolyzer
tile.oc.keyboard.name=Keyboard
tile.oc.hologram1.name=Hologram Projector (Tier 1)
tile.oc.hologram2.name=Hologram Projector (Tier 2)
tile.oc.microcontroller.name=Microcontroller
tile.oc.motionSensor.name=Motion Sensor
tile.oc.powerConverter.name=Power Converter
tile.oc.powerDistributor.name=Power Distributor
tile.oc.print.name=3D Print
tile.oc.printer.name=3D Printer
tile.oc.raid.name=Raid
tile.oc.redstone.name=Redstone I/O
tile.oc.robot.name=Robot
tile.oc.robotAfterimage.name=Robot
tile.oc.screen1.name=Screen (Tier 1)
tile.oc.screen2.name=Screen (Tier 2)
tile.oc.screen3.name=Screen (Tier 3)
tile.oc.serverRack.name=Server Rack
tile.oc.switch.name=Switch

# Items
item.oc.AbstractBusCard.name=Abstract Bus Card
item.oc.Acid.name=Grog
item.oc.ALU.name=Arithmetic Logic Unit (ALU)
item.oc.Analyzer.name=Analyzer
item.oc.appengTunnel.name=P2P Tunnel - OpenComputers
item.oc.ArrowKeys.name=Arrow Keys
item.oc.ButtonGroup.name=Button Group
item.oc.CardBase.name=Card Base
item.oc.Chamelium.name=Chamelium
item.oc.CircuitBoard.name=Circuit Board
item.oc.ControlUnit.name=Control Unit (CU)
item.oc.ComponentBus0.name=Component Bus (Tier 1)
item.oc.ComponentBus1.name=Component Bus (Tier 2)
item.oc.ComponentBus2.name=Component Bus (Tier 3)
item.oc.CPU0.name=Central Processing Unit (CPU) (Tier 1)
item.oc.CPU1.name=Central Processing Unit (CPU) (Tier 2)
item.oc.CPU2.name=Central Processing Unit (CPU) (Tier 3)
item.oc.CuttingWire.name=Cutting Wire
item.oc.DebugCard.name=Debug Card
item.oc.Debugger.name=Network Debugger
item.oc.Disk.name=Disk Platter
item.oc.Drone.name=Drone
item.oc.DroneCase0.name=Drone Case (Tier 1)
item.oc.DroneCase1.name=Drone Case (Tier 2)
item.oc.DroneCase3.name=Drone Case (Creative)
item.oc.eeprom.name=EEPROM
item.oc.FloppyDisk.name=Floppy Disk
item.oc.GraphicsCard0.name=Graphics Card (Tier 1)
item.oc.GraphicsCard1.name=Graphics Card (Tier 2)
item.oc.GraphicsCard2.name=Graphics Card (Tier 3)
item.oc.HardDiskDrive0.name=Hard Disk Drive (Tier 1)
item.oc.HardDiskDrive1.name=Hard Disk Drive (Tier 2)
item.oc.HardDiskDrive2.name=Hard Disk Drive (Tier 3)
item.oc.InkCartridge.name=Ink Cartidge
item.oc.InkCartridgeEmpty.name=Ink Cartidge (Empty)
item.oc.InternetCard.name=Internet Card
item.oc.Interweb.name=Interweb
item.oc.IronNugget.name=Iron Nugget
item.oc.LinkedCard.name=Linked Card
item.oc.Memory0.name=Memory (Tier 1)
item.oc.Memory1.name=Memory (Tier 1.5)
item.oc.Memory2.name=Memory (Tier 2)
item.oc.Memory3.name=Memory (Tier 2.5)
item.oc.Memory4.name=Memory (Tier 3)
item.oc.Memory5.name=Memory (Tier 3.5)
item.oc.Microchip0.name=Microchip (Tier 1)
item.oc.Microchip1.name=Microchip (Tier 2)
item.oc.Microchip2.name=Microchip (Tier 3)
item.oc.MicrocontrollerCase0.name=Microcontroller Case (Tier 1)
item.oc.MicrocontrollerCase1.name=Microcontroller Case (Tier 2)
item.oc.MicrocontrollerCase3.name=Microcontroller Case (Creative)
item.oc.NetworkCard.name=Network Card
item.oc.NumPad.name=Numeric Keypad
item.oc.Present.name=A little something...
item.oc.PrintedCircuitBoard.name=Printed Circuit Board (PCB)
item.oc.RawCircuitBoard.name=Raw Circuit Board
item.oc.RedstoneCard0.name=Redstone Card (Tier 1)
item.oc.RedstoneCard1.name=Redstone Card (Tier 2)
item.oc.Server0.name=Server (Tier 1)
item.oc.Server1.name=Server (Tier 2)
item.oc.Server2.name=Server (Tier 3)
item.oc.Server3.name=Server (Creative)
item.oc.Tablet.name=Tablet
item.oc.TabletCase0.name=Tablet Case (Tier 1)
item.oc.TabletCase1.name=Tablet Case (Tier 2)
item.oc.TabletCase3.name=Tablet Case (Creative)
item.oc.Terminal.name=Remote Terminal
item.oc.TexturePicker.name=Texture Picker
item.oc.Transistor.name=Transistor
item.oc.UpgradeAngel.name=Angel Upgrade
item.oc.UpgradeBattery0.name=Battery Upgrade (Tier 1)
item.oc.UpgradeBattery1.name=Battery Upgrade (Tier 2)
item.oc.UpgradeBattery2.name=Battery Upgrade (Tier 3)
item.oc.UpgradeChunkloader.name=Chunkloader Upgrade
item.oc.UpgradeContainerCard0.name=Card Container (Tier 1)
item.oc.UpgradeContainerCard1.name=Card Container (Tier 2)
item.oc.UpgradeContainerCard2.name=Card Container (Tier 3)
item.oc.UpgradeContainerUpgrade0.name=Upgrade Container (Tier 1)
item.oc.UpgradeContainerUpgrade1.name=Upgrade Container (Tier 2)
item.oc.UpgradeContainerUpgrade2.name=Upgrade Container (Tier 3)
item.oc.UpgradeCrafting.name=Crafting Upgrade
item.oc.UpgradeDatabase0.name=Database Upgrade (Tier 1)
item.oc.UpgradeDatabase1.name=Database Upgrade (Tier 2)
item.oc.UpgradeDatabase2.name=Database Upgrade (Tier 3)
item.oc.UpgradeExperience.name=Experience Upgrade
item.oc.UpgradeGenerator.name=Generator Upgrade
item.oc.UpgradeInventory.name=Inventory Upgrade
item.oc.UpgradeInventoryController.name=Inventory Controller Upgrade
item.oc.UpgradeLeash.name=Leash Upgrade
item.oc.UpgradeNavigation.name=Navigation Upgrade
item.oc.UpgradePiston.name=Piston Upgrade
item.oc.UpgradeSign.name=Sign I/O Upgrade
item.oc.UpgradeSolarGenerator.name=Solar Generator Upgrade
item.oc.UpgradeTank.name=Tank Upgrade
item.oc.UpgradeTankController.name=Tank Controller Upgrade
item.oc.UpgradeTractorBeam.name=Tractor Beam Upgrade
item.oc.WirelessNetworkCard.name=Wireless Network Card
item.oc.WorldSensorCard.name=World Sensor Card

# Entities
entity.oc.Drone.name=Drone

# GUI
oc:gui.Analyzer.Address=§6Address§f: %s
oc:gui.Analyzer.AddressCopied=Address copied to clipboard.
oc:gui.Analyzer.ChargerSpeed=§6Charge speed§f: %s
oc:gui.Analyzer.ComponentName=§6Component name§f: %s
oc:gui.Analyzer.Components=§6Number of connected components§f: %s
oc:gui.Analyzer.LastError=§6Last error§f: %s
oc:gui.Analyzer.RobotName=§6Name§f: %s
oc:gui.Analyzer.RobotOwner=§6Owner§f: %s
oc:gui.Analyzer.RobotXp=§6Experience§f: %s (Level %s)
oc:gui.Analyzer.StoredEnergy=§6Stored energy§f: %s
oc:gui.Analyzer.TotalEnergy=§6Total stored energy§f: %s
oc:gui.Analyzer.Users=§6Users§f: %s
oc:gui.Analyzer.WirelessStrength=§6Signal strength§f: %s
oc:gui.Assembler.Collect=Collect output
oc:gui.Assembler.Complexity=Complexity: %s/%s
oc:gui.Assembler.InsertCase=Insert a base part
oc:gui.Assembler.InsertCPU=Insert a CPU
oc:gui.Assembler.InsertRAM=Insert some RAM
oc:gui.Assembler.Progress=Progress: %s%% (%s)
oc:gui.Assembler.Run=Assemble
oc:gui.Assembler.Warnings=§eWarning§7: Recommended components are missing.
oc:gui.Assembler.Warning.BIOS=BIOS
oc:gui.Assembler.Warning.GraphicsCard=Graphics Card
oc:gui.Assembler.Warning.Inventory=Inventory Upgrade
oc:gui.Assembler.Warning.Keyboard=Keyboard
oc:gui.Assembler.Warning.OS=Bootable Medium
oc:gui.Assembler.Warning.Screen=Screen
oc:gui.Chat.NewVersion=A new version is available: %s
oc:gui.Chat.WarningFingerprint=§cWARNING§f - fingerprint mismatch! Expected '§a%s§f' but got '§e%s§f'. Unless you are a modder and are running the deobfuscated version of the mod, it is §lstrongly§f recommended to redownload OpenComputers, because the JAR you are using may have been tampered with.
oc:gui.Chat.WarningLuaFallback=Native Lua libraries are not available, computers will not be able to persist their state. They will reboot on chunk reloads.
oc:gui.Chat.WarningPower=No supported power providing mod available. Computers, screens and all other components will §lnot§f require energy. Install one of the following mods to enable power: BuildCraft, Electrical Age, IndustrialCraft2, Mekanism or Thermal Expansion. Disable power in the config to suppress this warning.
oc:gui.Chat.TextureName=§7Texture name is §a%s§f.
oc:gui.Chat.WarningProjectRed=You are using a version of Project: Red that is incompatible with OpenComputers. Try updating your version of Project: Red.
oc:gui.Chat.WarningRecipes=There were errors loading one or more recipes. Some items may be uncraftable. Please check your log file for more information.
oc:gui.Error.ComponentOverflow=Too many components connected to the computer.
oc:gui.Error.InternalError=Internal error, please see the log file. This is probably a bug.
oc:gui.Error.NoCPU=No CPU is installed in the computer.
oc:gui.Error.NoEnergy=Not enough energy.
oc:gui.Error.NoRAM=No RAM is installed in the computer.
oc:gui.Error.OutOfMemory=Out of memory.
oc:gui.Raid.Warning=§4Adding a disk wipes it.[nl] Removing a disk wipes the raid.
oc:gui.Robot.Power=Energy
oc:gui.Robot.TurnOff=Turn off
oc:gui.Robot.TurnOn=Turn on[nl]§7Use an Analyzer to troubleshoot errors.§r
oc:gui.ServerRack.None=None
oc:gui.ServerRack.Back=Back
oc:gui.ServerRack.Bottom=Bottom
oc:gui.ServerRack.Left=Left
oc:gui.ServerRack.Right=Right
oc:gui.ServerRack.Top=Top
oc:gui.ServerRack.SwitchExternal=External
oc:gui.ServerRack.SwitchInternal=Internal
oc:gui.ServerRack.WirelessRange=Range
oc:gui.Switch.TransferRate=Cycle rate
oc:gui.Switch.PacketsPerCycle=Packets / cycle
oc:gui.Switch.QueueSize=Queue size
oc:gui.Terminal.InvalidKey=Invalid key, most likely another terminal has been bound to the server.
oc:gui.Terminal.OutOfRange=No signal.

# Containers
oc:container.AccessPoint=Access Point
oc:container.Adapter=Adapter
oc:container.Charger=Charger
oc:container.Case=Computer
oc:container.Disassembler=Disassembler
oc:container.DiskDrive=Disk Drive
oc:container.Printer=Printer
oc:container.Raid=Raid
oc:container.Server=Server
oc:container.ServerRack=Server Rack
oc:container.Switch=Switch
oc:container.TabletWrapper=Tablet

# Keybinds
key.materialCosts=Show Material Costs
key.clipboardPaste=Paste Clipboard

# Item / Block Tooltips
oc:tooltip.AccessPoint=Acts like a Switch, but additionally receives wireless packets and relays wired packets wirelessly.
oc:tooltip.AbstractBusCard=Allows interacting with §fStargateTech 2§7's abstract bus by sending and receiving LIP packets.
oc:tooltip.Acid=A highly toxic pseudo-liquid, usually only consumed by certain pirates. Thanks to its corrosive nature it is perfectly suited for etching circuit boards.
oc:tooltip.Adapter=Used to control non-component blocks, such as vanilla blocks or blocks from other mods.
oc:tooltip.ALU=Adds numbers so you don't have to. It might be better this way.
oc:tooltip.Analyzer=Used to display information about blocks, such as their §faddress§7 and §fcomponent name§7.[nl] Also displays the error that caused a computer to crash if it did not shut down normally.
oc:tooltip.Assembler=Allows constructing robots and other devices from a number of different computer parts.
oc:tooltip.Cable=A cheap way of connecting blocks.
oc:tooltip.Capacitor=Stores energy for later use. Can be filled and emptied very quickly.
oc:tooltip.CardBase=As the name indicates, this is the basic building block for all expansion cards.
oc:tooltip.Case=The Computer Case is the basic building block for computers and houses the computer's §fextension cards§7, §fRAM§7 and §fhard disks§7.[nl] Slots: §f%s§7
oc:tooltip.Chamelium=Raw material for 3D prints. Do not swallow. Not that you could even if you wanted to.
oc:tooltip.ChameliumBlock=Nice and clean. Handy for tinted shapes in 3D prints, or just for having a clean, colored block to decorate your fancy base with.
oc:tooltip.Charger=Transfers energy from capacitors into adjacent robots and drones. The transfer rate depends on the incoming §fredstone signal§7, where no signal means don't charge devices, and maximum strength means charge at full speed. Can also be used to charge tablets and access hard drives in tablets.
oc:tooltip.CircuitBoard=Now we're getting somewhere. Can be etched to obtain a printed circuit board.
oc:tooltip.ControlUnit=This is the unit that... controls... stuff. You need it to build a CPU. So yeah, totally important.
oc:tooltip.ComponentBus=This expansion allows servers to communicate with more components at the same time, similar to how CPUs do.[nl] Supported components: §f%s§7
oc:tooltip.CPU=An essential component of all computers. The clock rate is a bit unreliable, but what do you expect when it runs on a pocket sundial?[nl] Supported components: §f%s§7
oc:tooltip.CPU.Architecture=Architecture: §f%s§7
oc:tooltip.CuttingWire=Used to cut clay blocks into circuit board shape. Breaks after one use, which probably makes it the most inefficient tool ever.
oc:tooltip.DebugCard=Creative mode item, allows manipulating the world to make testing easier. Use at your own peril.
oc:tooltip.Debugger=Can be used to output debug information on OC's internal network grid. Only use if so instructed by a dev.
oc:tooltip.Disassembler=Separates items into their original components. §lWarning§7: returned items have a %s%% chance of breaking in the process!
oc:tooltip.Disk=Primitive medium that can be used to build persistent storage devices.
oc:tooltip.DiskDrive.CC=ComputerCraft floppies are §asupported§7.
oc:tooltip.DiskDrive=Allows reading and writing floppies. Can be installed in robots to allow inserting floppies later on.
oc:tooltip.Drone=Drones are light-weight, fast reconnaissance units with limited cargo space.
oc:tooltip.DroneCase=This casing is used to build Drones in the assembler. It has room for a small amount of components and provides endstone-powered levitation.
oc:tooltip.EEPROM=Small, programmable storage that contains the BIOS computers use to boot.
oc:tooltip.Geolyzer=Allows scanning the surrounding area's blocks' hardness. This information can be useful for generating holograms of the area or for detecting ores.
oc:tooltip.GraphicsCard=Used to change what's displayed on screens.[nl] Maximum resolution: §f%sx%s§7[nl] Maximum color depth: §f%s§7[nl] Operations/tick: §f%s§7
oc:tooltip.InkCartridge=Used to refill ink in 3D printers. For mysterious reasons it does not have to remain in the printer.
oc:tooltip.InkCartridgeEmpty=This ink cartridge has been sucked dry. Refill it using dyes. Or throw it away. See if I care.
oc:tooltip.InternetCard=This card allows making HTTP requests and using real TCP sockets.
oc:tooltip.Interweb=Congratulations, you win one (1) interweb. You can connect to it using an Internet Card. Beware: don't feed the trolls.
oc:tooltip.IronNugget=A nugget made of iron, that's why it's called an Iron Nugget, duh...
oc:tooltip.Keyboard=Can be attached to screens to allow typing on them.
oc:tooltip.Hologram0=A volumetric display that can be controlled by computers to display arbitrary voxel structures.[nl] Resolution: §f48x32x48§7 [nl] Maximum scale: §f3x§7 [nl] Color depth: §fMonochrome§7
oc:tooltip.Hologram1=A volumetric display that can be controlled by computers to display arbitrary voxel structures.[nl] Resolution: §f48x32x48§7 [nl] Maximum scale: §f4x§7 [nl] Color depth: §fTricolor§7
oc:tooltip.LinkedCard=These are crafted in pairs, and can only communicate with their partner card. However, they can communicate across any distance, and even across dimensions. The energy required to send a message is fairly high, though.
oc:tooltip.LinkedCard_Channel=§8Channel: %s§7
oc:tooltip.MaterialCosts=Hold [§f%s§7] for material costs.
oc:tooltip.Materials=Materials:
oc:tooltip.Memory=Required to get computers to run. The more you have, the more complex the programs you can run.
oc:tooltip.Microchip=The chip formerly known as Integrated Circuit. I have no idea why this works with redstone, but it does.
oc:tooltip.Microcontroller=Microcontrollers are computers boiled down to the essentials. They are intended to take care of very specific tasks, running only a single program that is provided on the EEPROM built into them.
oc:tooltip.MicrocontrollerCase=Base component for building microcontrollers. Place it into an assembler to add further components and assemble a microcontroller.
oc:tooltip.MotionSensor=Can detect movement of nearby living beings. Requires clear line-of-sight.
oc:tooltip.NetworkCard=Allows distant computers connected by other blocks (such as cable) to communicate by sending messages to each other.
oc:tooltip.PowerAcceptor=Energy conversion speed: §f%s/t§7
oc:tooltip.PowerConverter.BuildCraft=§fBuildCraft MJ§7: §a%s:%s§7
oc:tooltip.PowerConverter.Factorization=§fFactorization Charge§7: §a%s:%s§7
oc:tooltip.PowerConverter.IndustrialCraft2=§fIndustrialCraft² EU§7: §a%s:%s§7
oc:tooltip.PowerConverter.Mekanism=§fMekanism Joules§7: §a%s:%s§7
oc:tooltip.PowerConverter.ThermalExpansion=§fThermal Expansion RF§7: §a%s:%s§7
oc:tooltip.PowerConverter.ResonantEngine=§fResonant Engine Coulombs§7: §a%s:%s§7
oc:tooltip.PowerConverter=Converts power from other mods to the internal energy type. Conversion rates:
oc:tooltip.PowerDistributor=Distributes energy among different networks. This is useful for sharing power fed into your system from one converter among different sub-networks that should remain separate.
oc:tooltip.Printer=Allows printing blocks of user-defined shapes using Chamelium and Ink Cartridges. Must be configured using a computer. Keep away from small children. Because reasons.
oc:tooltip.PrintedCircuitBoard=The basic building block for expansion cards and memory and such.
oc:tooltip.Present=... for your troubles. Open this present for a chance to receive some §kphat lewt§7![nl]§8Craft OpenComputers items when the time is right for a chance to receive a present.§7
oc:tooltip.Raid=Allows combining three hard drives into one larger file system that can be used by all connected computers.
oc:tooltip.RawCircuitBoard=Can be hardened in any furnace compatible oven.
oc:tooltip.Redstone=Allows reading and emitting redstone signals around the block. Can be controlled by any computer the block is connected to. This is basically like an external redstone card.
oc:tooltip.RedstoneCard.ProjectRed=§fProjectRed§7 is §asupported§7.
oc:tooltip.RedstoneCard.RedLogic=§fRedLogic§7 is §asupported§7.
oc:tooltip.RedstoneCard.RedNet=§fRedNet§7 is §asupported§7.
oc:tooltip.RedstoneCard.WirelessCBE=§fWireless Redstone (ChickenBones)§7 is §asupported§7.
oc:tooltip.RedstoneCard.WirelessSV=§fWireless Redstone (SlimeVoid)§7 is §asupported§7.
oc:tooltip.RedstoneCard=Allows reading and emitting redstone signals around the computer or robot.
oc:tooltip.Robot=Unlike computers, robots can move around and interact with the world much like a player can. They can §onot§r§7 interact with external components, however!
# The underscore makes sure this isn't hidden with the rest of the tooltip.
oc:tooltip.Robot_Level=§fLevel§7: §a%s§7
oc:tooltip.Robot_StoredEnergy=§fStored energy§7: §a%s§7
oc:tooltip.Screen=Display text, controlled by a Graphics Card in a Case.[nl] Maximum resolution: §f%sx%s§7[nl] Maximum color depth: §f%s§7
oc:tooltip.Server=This is a server, there are many like it, but this one can be upgraded with components much like a computer case can be. It can be run by inserting it into a server rack.[nl] Number of supported terminals: §f%s§7
oc:tooltip.Server.Components=Installed components:
oc:tooltip.ServerRack=Allows the installation of up to four servers. Use a Remote Terminal to access the servers built into this server rack.
oc:tooltip.Switch=Allows connecting different networks to each other. Only network messages will be passed along, components will not be visible through this. Use this to separate networks while still allowing communication using Network Cards, for example.
oc:tooltip.Tablet=A tablet computer, for fresh Lua on the go. Can be forced to shut down by sneak-activating it. 
oc:tooltip.TabletCase=Basic case for tablets. Place it into the assembler to add in components and create a tablet computer.
oc:tooltip.Terminal=Allows controlling a server remotely, as long as you are in range of it. Acts like a portable screen and keyboard. Shift-right-click a server in a server rack to bind the terminal to it.
oc:tooltip.TexturePicker=This tool allows showing a string describing a block's surface, for use in 3D printer shape definitions. Totally not texture names, nope. No sir.
oc:tooltip.Tier=§8Tier %s
oc:tooltip.TooLong=Hold [§f%s§7] for a detailed tooltip.
oc:tooltip.Transistor=A basic element in most other computer parts. It's a bit twisted, but it does the job.
oc:tooltip.UpgradeAngel=Allows robots to place blocks in thin air, even if there is no point of reference.
oc:tooltip.UpgradeBattery=Increase the amount of energy a device can store, allowing it work longer without having to be recharged. [nl] Capacity: §f%s§7
oc:tooltip.UpgradeChunkloader=If a robot moves in a forest and no one is around to see it, does it really move? This upgrades makes sure it does. It keeps the chunk a device is in loaded, but continually consumes energy while active.
oc:tooltip.UpgradeContainerCard=This container upgrade allows dynamically installing and removing a card from an assembled device. [nl] Maximum Tier: §f%s§7
oc:tooltip.UpgradeContainerUpgrade=This container upgrade allows dynamically installing and removing another upgrade from an assembled device. [nl] Maximum Tier: §f%s§7
oc:tooltip.UpgradeCrafting=Enables robots to use the top left area of their inventory for crafting objects. Items have to be aligned as they would be in a crafting table.
oc:tooltip.UpgradeDatabase=This upgrade allows storing item stack information for later retrieval and use by other components. Note that it must be configured by hand.[nl] Supported entries: §f%s§7
oc:tooltip.UpgradeExperience=This upgrade allows robots to accumulate experience by performing various operations. The more experience they have, the more energy they can store, the faster they can harvest blocks and the more efficiently they can use tools.
oc:tooltip.UpgradeGenerator=Can be used to generate energy from fuel on the go. Burns items to generate energy over time, based on their fuel value.[nl] §fEfficiency§7: §a%s%%§7
oc:tooltip.UpgradeInventory=This upgrade provides inventory space to a robot or drone. Without one of these, they will not be able to store items internally.
oc:tooltip.UpgradeInventoryController=This upgrade allows robots and drones more control in how it interacts with external inventories, and allows robots to swap their equipped tool with an item in their inventory.
oc:tooltip.UpgradeLeash=Allows some devices, such as drones, to bind Isaa- excuse me... *chatter* My apologies. I'm just being told this is actually used to put animals on a leash. Multiple animals, even. Odd.
oc:tooltip.UpgradeNavigation=Can be used to determine the position and orientation of a device. The position is relative to the center of the map that was used to craft this upgrade.
oc:tooltip.UpgradePiston=This upgrade is very pushy. It allows moving blocks, similar to when using a piston. It does §lnot§7 move entities, however.
oc:tooltip.UpgradeSign=Allows reading text on and writing text to signs.
oc:tooltip.UpgradeSolarGenerator=Can be used to generate energy from sunlight on the go. Requires a clear line of sight to the sky above the device. Generates energy at %s%% of the speed of a Stirling Engine.
oc:tooltip.UpgradeTank=This upgrade provides a tank for fluid storage for robots and drones. Without one of these, they will not be able to store fluids internally.
oc:tooltip.UpgradeTankController=This upgrade allows robots and drones more control in how they interacts with external tanks, and allows them to transfer fluids into and out of fluid tank items in their inventory.
oc:tooltip.UpgradeTractorBeam=Equips a device with extremely advanced technology, nicknamed the "Item Magnet". Allows the device to pick up items anywhere within 3 blocks of its location.
oc:tooltip.WirelessNetworkCard=Allows wireless sending of network messages in addition to normal ones. You can adjust the §fsignal strength§7 to control how far messages are sent. Higher signal strength results in higher energy consumption.
oc:tooltip.WorldSensorCard=Allows reading out information about the world, such as its gravity and whether it has a breathable atmosphere. Use results at own risk. The manufacturer takes no responsibility for bodily or material harm caused by decisions made upon the cards' outputs. We have lawyers. And money. Don't even try.

# NEI Usage Pages
item.oc.AbstractBusCard.usage=This card allows computers, servers and robots to interact with StargateTech2's abstract bus. When the card is installed, these blocks will connect to the abstract bus and a component becomes available to the machine that can be used to send messages across the abstract bus. Incoming abstract bus messages are converted to signals that are injected into the machine.
item.oc.Analyzer.usage=The §oAnalyzer§r is a handy tool for getting some information about OpenComputers-related blocks in the world. Simply (sneak-)activate a block to get some information printed to the chat. This ranges from basic things like the address of components, to power levels in the subnetwork the block is in, and information on the error lead to a computer to crash, for example.[nl][nl]Another useful functionality is that when using the using the analyzer on a block while holding down [Ctrl] the address of the block component will be copied to the clipboard.
item.oc.ComponentBus.usage=A §oComponent Bus§r is a server-specific upgrade that allows the server to communicate with more components at the same time, without shutting down. Like with CPUs, higher tier buses provide higher component limits.
item.oc.CPU.usage=The §oCentral Processing Unit§r is a core part for each computer. It defines the architecture of the computer, and the number of components that can be connected to the computer before it stops working. Higher tier CPUs also provide a higher per-tick direct call limit to the computer - in simpler terms: better CPUs run faster.
item.oc.DebugCard.usage=The §oDebug Card§r is a non-craftable item that was originally only intended to make debugging things easier, by automating some processes. It has since gotten a bunch more functionality, making it quite useful for custom map-making.[nl][nl]Note that you can use shift-rightclick while holding the card to bind it to you / unbind it, meaning §orunCommand§r will be performed using your permission levels instead of the default OpenComputers ones.
item.oc.DroneCase.usage=The §oDrone Case§r is used to build Drones in the Assembler. Drones are light-weight, fast and very mobile machines with limited functionality. Unlike Robots they cannot use tools, and can interact with the world only in a relatively limited manner.[nl][nl]They make up for their limitations with speed and lower running energy costs. They are well suited for transport of small amounts of items, and ideal for reconnaissance. Pairing a Drone with a Robot can be quite powerful, with the Robot doing the "hard work", and the Drone providing information about the environment and transporting items to and from a central hub, for example.[nl][nl]Like microcontrollers, Drones can only be programmed using their EEPROM. Accordingly, the EEPROM can be changed by recrafting the Drone with another EEPROM.
item.oc.eeprom.usage=The §oEEPROM§r is what contains the code used to initialize a computer when it is being booted. This data is stored as a plain byte array, and may mean different things to different CPU architectures. For example, for Lua it is usually a small script that searches for file systems with an init script, for other architectures it may be actual machine code.
item.oc.FloppyDisk.usage=The §oFloppy Disk§r is the cheapest and smallest type of storage medium in OpenComputers. It is a handy early game way of storing data and transferring it between computers and robots. You may also find floppy disks with useful programs on them in dungeon chests.[nl][nl]Beware: shift-rightclicking while holding a floppy disk in your hand will wipe the floppy disk!
item.oc.GraphicsCard.usage=The §oGraphics Card§r is an essential part for most computers and allows the computer to display text on a connected §oScreen§r. Graphics cards come in several tiers, and like screens, support different resolutions and color depths.[nl][nl]Another noteworthy difference for the different graphics card tiers is the number of operations a graphics card can perform per tick. The values listed in the graphics cards' tooltip is representative for a computer with a tier two CPU. Tier one CPUs perform slightly slower, tier three CPUs slightly faster. The numbers listed are for the different operations provided by a GPU: copy, fill, set, setBackground and setForeground, respectively.
item.oc.HardDiskDrive.usage=The §oHard Disk Drives§r are the higher tier storage medium in OpenComputers. There are no speed differences in the storage media provided by OpenComputers, they only differ in the amount of disk space they provide. There are also some devices that can only use disk drives, no floppies (although servers could use an external disk drive, for example).[nl][nl]Beware: shift-rightclicking while holding a hard disk in your hand will wipe the disk!
item.oc.InternetCard.usage=The §oInternet Card§r grants computers access to the internet. It provides ways to perform simple HTTP requests, as well as to open plain TCP client sockets that can be read and written to.[nl][nl]Installing an internet card in a computer will also attach a custom file system that contains a few internet related applications, such as one for downloading and uploading snippets from and to pastebin as well as a wannabe wget clone that allows downloading data from arbitrary HTTP URLs.
item.oc.LinkedCard.usage=The §oLinked Card§r is a specialized but advanced version of a network card. It can only operate in pairs, providing a point-to-point communication between the paired cards. In return the distance the cards can communicate over is unlimited. They can even communicate when in different dimensions.
item.oc.Memory.usage=§oMemory§r is, like a §oCPU§r, an essential part in all computers. Depending on the CPU's architecture, the memory has a very essential effect on what a computer can and cannot do. For the standard Lua architecture, for example, it controls the actual amount of memory Lua scripts can use. This means that to run larger and more memory-intensive programs, you'll need more RAM.
item.oc.MicrocontrollerCase.usage=The §oMicrocontroller Case§r is the base part when building microcontrollers in the §oAssembler§r. Microcontrollers are very primitive computers. They may only contain a very limited number of components, and are intended to be used in very specific use-cases, such as transforming or reacting to redstone signals, or processing network messages.[nl][nl]They do not have an actual file system. All programming must be done using the EEPROM chip built into them. This chip can be swapped for another one by crafting a microcontroller with the chip to insert. The old EEPROM will be returned to your inventory.[nl][nl]While they also require power to run, they consume very little energy.
item.oc.NetworkCard.usage=The §oNetwork Card§r allows computers to send and receive network messages. Such messages (or packets) can be either sent as a broadcast, in which case they will be sent to all nodes in the same subnetwork, or sent to specific target, in which case they will only be received by the node with the specified target address. §oSwitches§r and §oAccess Points§r can be used to bridge multiple subnetworks by relaying messages between the subnetworks they are connected to. It is also possible to send a targeted message if the receiver is in another subnetwork, if the networks are connected via one or more switches.
item.oc.RedstoneCard.usage=The §oRedstone Card§r allows computers to read and emit analog redstone signal in adjacent blocks. When an ingoing signal strength changes, a signal is injected into the computer.[nl][nl]If there are any supported mods present that provide bundled redstone facilities, such as RedLogic, Project Red or MineFactory Reloaded, or mods that provide wireless redstone facilities such as WR-CBE and Slimevoid's Wireless mod, a second tier card is available that allows interacting with these systems.[nl][nl]The side provided to the several methods are relative to the orientation of the computer case / robot / server rack. That means when looking at the front of the computer, right is at your left and vice versa.
item.oc.Server.usage=§oServers§r are a form of higher tier computer. They can be configured by holding them in the hand and rightclicking - like opening a backpack or ender pouch, for example. After inserting CPU, memory and cards, the server has to be placed inside a §oServer Rack§r. For more information see the server rack entry.
item.oc.TabletCase.usage=The §oTablet Case§r is the base part when building tablets in the §oAssembler§r. Tablets are very compact and portable computers. They can host a small number of select upgrades, but obviously cannot interact with the world like computer cases can (using simple §oNetwork Cards§r or §oRedstone Cards§r for example). Upgrades and cards that cannot be used in tablets can generally not be placed into the assembler, so if you can install an upgrade, you can usually assume that you will also be able to use it.[nl][nl]They must also remain in a player's inventory to continue running. When dropped or placed into some other inventory, they will turn off after a short amount of time.
item.oc.Terminal.usage=The §oRemote Terminal§r can be used to remote control §oServers§r. To use it, sneak-activate a server that is installed in a §oServer Rack§r (click on the server rack block in the world, targeting the server to bind the terminal to). When a terminal is bound to a server, a virtual screen and keyboard get connected to the server. This can lead to unexpected behavior if another real screen and/or keyboard is connected to the server, so this should be avoided. When rightclicking with the terminal in hand after binding it, a GUI will open, the same as when opening the GUI of a screen with an attached keyboard.[nl][nl]Multiple terminals can be bound to one server, but they will all display the same information, as they will share the virtual screen and keyboard. The number of terminals that can be bound to a server depends on the server's tier. The range in which the terminals work can be configured in the server rack's GUI.
item.oc.UpgradeChunkloader.usage=The §oChunkloader Upgrade§r can be installed in devices to allow them too keep the chunk they are in - as well as the surrounding chunks - loaded. This consumes quite a bit of energy, however. The chunkloader can be turned on and off using the component the upgrade exposes to the device.[nl][nl]The upgrade is automatically enabled when the device powers up, and automatically disabled when the device powers down.
item.oc.UpgradeContainerCard.usage=The §oCard Container§r is a container type upgrade for robots that provides a slot in the finished robots into which cards can be placed. The tier of card that slot can hold is equal to the tier of the container. Unlike normal upgrades, the complexity of containers is twice their tier.
item.oc.UpgradeContainerUpgrade.usage=The §oUpgrade Container§r is a container type upgrade for robots that provides a slot in the finished robots into which normal upgrades can be placed. The tier of upgrade that slot can hold is equal to the tier of the container. Unlike normal upgrades, the complexity of containers is twice their tier.
item.oc.UpgradeCrafting.usage=The §oCrafting Upgrade§r allows robots to craft shaped and shapeless recipes using items in their inventory. When crafting, the top-left three by three grid in the robot's inventory is used as the crafting grid. Items have to be located as they would be in a normal crafting table. Results will be placed back into the robot's inventory. As when picking up items, the result will preferrably placed into the selected slot, and failing so continue to search forwards until an empty slot is found. If no inventory space remains, the result will be dropped into the world.
item.oc.UpgradeDatabase.usage=The §oDatabase Upgrade§r can be configured to store a list of item stack representations, which can then be used by other components. This is particularly useful for items that are differentiated purely based on their NBT data, which is not part of the item stack descriptor returned by callbacks.[nl][nl]To configure a database, open it by right-clicking it while holding it in your hand, then placing the stacks you wish to configure it with into the top inventory. This will store a "ghost stack", i.e. no "real" items are stored in the database.
item.oc.UpgradeExperience.usage=The §oExperience Upgrade§r is a very special upgrade, as it allows robots to collect experience by performing various actions, such as digging up ores and killing entities. Robots can gain up to 30 levels, and gain passive bonuses with each level, including faster harvest speeds and increased energy buffer capacity. Robots at level ten and above will get a golden tint, robots at level twenty and above will get a diamond tint.[nl][nl]The actual experience is stored inside the upgrade, meaning if the upgrade is transferred to another robot, so is the experience.
item.oc.UpgradeGenerator.usage=The §oGenerator Upgrade§r allows devices to refuel on the go. Currently it only supports solid fuels, such as coal. It has an internal intentory that can store one item stack of fuel. Surplus fuel can be removed from the generator using the according API method. When removing a generator upgrade from a robot its contents will be dropped into the world.[nl][nl]The efficiency of generators is lower than that of usual generators of other mods, meaning it is usually more fuel efficient to power devices using a §oCharger§r.
item.oc.UpgradeInventory.usage=The §oInventory Upgrade§r provides inventory slots to robots and drones. For each inventory upgrade a robot will gain an addition 16 inventory slots, up to a maximum of 64 slots in total, a drone will gain 4 slots, up to a maximum of 8 slots in total. If no inventory upgrade is installed in a device it will not be able to store or pick up items.
item.oc.UpgradeInventoryController.usage=The §oInventory Controller Upgrade§r provides extended inventory interaction to robots and drones. It allows the device to excplicitly target slots in external inventories when dropping or sucking items. It also allows devices to read detailed information about item stacks. Lastly it provides robots with a means to change their equipped tool without external help.[nl][nl]This upgrade can also be placed in §oAdapters§r, where it provides similar inspection methods for inventories adjacent to the adapter as it does to the robot. It does not allow the adapter to move items into or out of inventories, however. This feature is only available in robots and drones.
item.oc.UpgradeLeash.usage=The §oLeash Upgrade§r allows putting animals on a leash, bound to the entity that hosts the device the component is used by, for example drones. Using this upgrade, multiple animals can be leashed at the same time, which makes this quite useful for moving herds.
item.oc.UpgradeNavigation.usage=The §oNavigation Upgrade§r provides location and orientation information to devices it is installed in. The coordinates the upgrade provides are relative to the center of the map that was used to craft the upgrade, and the functional range is based on the size of that map.[nl][nl]Navigation upgrades can be re-crafted with a map to replace the map in the upgrade with another one. The old map will be returned.
item.oc.UpgradeTank.usage=The §oTank Upgrade§r allows devices to store fluids. Each tank can only hold a single type of fluids, and provides a volume of 16 buckets (16000mB). Robots and drones can drain liquids from the world and from other fluid tanks, and can fill the fluids back into fluid tanks, and, when supported by the fluid, place them back into the world. There is no limit to the number of tanks that can be installed in a device.
item.oc.UpgradeTankController.usage=The §oTank Controller Upgrade§r is to fluid tanks what the §oInventory Controller Upgrade§r is to normal inventories. It allows devices to query more detailed information about tanks in and next to them.[nl][nl]This upgrade can also be installed in §oAdapters§r, allowing computers connected to the adapter to query information about the tanks adjacent to the adapter.
item.oc.UpgradeTractorBeam.usage=The §oTractor Beam Upgrade§r allows devices to pick up items in a three block radius around them. This can be highly useful when employing robots in tree or other farms, or when having them use tools that break multiple blocks around them (such as Tinker's Construct tools). Each operation will try to suck a single item stack in range and consume some energy.
item.oc.WirelessNetworkCard.usage=The §oWireless Network Card§r is an upgraded §oNetwork Card§r than, in addition to wired network messages, can also send and receive wireless network messages. The signal strength directly controls the distance up to which a sent message can be received, where the strength is equal to that distance in blocks.[nl][nl]The higher the signal strength, the more energy it will take to send a single message. The terrain between the sender and receiver also determines whether a message will be successfully transmitted or not. To penetrate a block, the blocks hardness is subtracted from the signal strength - with the minimum being one for air blocks. If no strength remains to reach the receiver, the message will not be received. This is not an exact science however - sometimes messages may still reach the target. In general you'll want to make sure the line of sight between sender and receiver are clear, however.
tile.oc.accessPoint.usage=The §oAccess Point§r is the wireless version of the switch block. It can be used to separate subnetworks so that machines in them will not see components in other networks, while still allowing to send network messages to the machines in other networks.[nl][nl]In addition to that, this block will resend any wired messages it receives as wireless ones, wireless messages it receives as wired messages, and repeat wireless messages as wireless ones.[nl][nl]Switches and access point do §lnot§r keep track of which packets they relayed recently, so avoid cycles in your network, or you may receive the same packet multiple times.[nl][nl]Packets are only re-sent a certain number of times, so chaining an arbitrary number of switches or access points is not possible.
tile.oc.adapter.usage=The §oAdapter§r allows computers to interact with a number of blocks that are not part of OC, such as blocks from Minecraft itself (like the Furnace) and from a number of other mods. Supported blocks adjacent to the adapter will show up as components in computers connected to the adapter.[nl][nl]In addition to this, the adapter provides a slot for a few select upgrades. For example, the §oInventory Controller Upgrade§r allows computers to query more information from an inventory adjacent to the adapter, similar to when the upgrade is installed in a device, and a §oTank Controller Upgrade§r provides similar functionality for fluid tanks next to the adapter.
tile.oc.assembler.usage=The §oAssembler§r is an advanced workstation that can be used to build more complex electronic devices, such as §oRobots§r and §oTablets§r. They usually require a relatively large amount of energy to assemble these devices, to it is recommended to power them sufficiently.[nl][nl]To build a device using an assembler, first insert the base part for that device. For robots that is a computer case of any tier, for tablets that is a tablet case, for example. Continue to insert any parts you would like the device to contain. Take particular care to provide an operating system, or a possibility to install one later on (for robots you can install a disk drive to insert and remove floppies later on, for example).[nl][nl]Also note that for robots to have a screen you need to install a tier one screen in them, and to allow typing on the screen you also need to install a keyboard. For tablets the screen is pre-installed in the tablet case, but you still need to install a keyboard if you wish to type on your tablet.[nl][nl]Once everything is in place, press the start button and wait for the device to be assembled and charged. It is important to remember that you §lcannot§r change the device after it has been assembled. If you forgot something or made a mistake, you will have to disassemble the device completely using the §oDisassembler§r, which has a slight chance of breaking parts in the process.
tile.oc.cable.usage=The §oCable§r simply serves as a way of connecting computers and machines that are far apart. If you have a compact build where all components touch each other (directly or indirectly, most blocks also behave the same way as cables) you will usually not need cables.[nl][nl]Cables can be colored using any kind of dye. Colored cables will only connect to cables of the same color and to light gray colored cables - the default color. This can be useful for running cables for multiple subnetworks in parallel, without using covers.[nl][nl]Speaking of which, cables can be covered using either Forge MultiPart covers or immibis Microblocks covers.
tile.oc.capacitor.usage=The §oCapacitor§r has one job, storing a bunch of energy, either as a failsafe or for quick use. Unlike when converting energy from other mods' power systems to the internal energy format, transfer inside a single OC subnetwork is pretty much instantaneous, so it can be of advantage to store some energy internally, for tasks that consume a lot of energy, such as assembling devices in the §oAssembler§r or charging §oRobots§r.[nl][nl]The storage efficiency of capacitors increases the more capacitors are in their direct and indirect vicinity. For example, two capacitors directly next to each other will have a higher storage capacity than the sum of two separated capacitors. This adjacency bonus applies for capacitors up to two blocks away, with slightly less of a bonus for capacitors two blocks away than for capacitors one block away.
tile.oc.case.usage=The §oComputer Case§r is the most basic computer you can build, and usually what you'll get started with. The different tiers of computers have a different layout of slots available for parts, as well as increasing level of supported component tier (indicated by the roman numeral in applicable slots).[nl][nl]To get a running computer you'll need to install a §oCPU§r and some §oMemory§r (RAM) in a computer case. You'll usually also want to install a §oGraphics Card§r to be able to display text on a connected screen, and a §oHard Drive§r to install an operating system on (after booting from an OS floppy from an external §oDisk Drive§r for the first time, for example).[nl][nl]Computers can be upgraded using several different cards. For example, using a §oRedstone Card§r computers are able to read and emit redstone signals. Using §oNetwork Cards§r they can send and receive network messages, allowing them to communicate with other computers.[nl][nl]If a computer stops working / crashes, try using the §oAnalyzer§r tool on it (sneak-activate) to see the error message that caused the computer to stop.[nl][nl]Computer cases can be dyed using any dye. This is purely for aesthetic reasons, and has no practical implications.[nl][nl]Computer cases also serve as the base part when building robots in the §oAssembler§r. The different tiers determine the available slots for building the robot. When using a creative case, the robot will also provide itself with power, as does the normal creative case.
tile.oc.charger.usage=The §oCharger§r is used to charge devices such as §oRobots§r and §oTablets§r. A charger has to be activated by applying a redstone signal to it. The relative charge speed is based on the applied redstone signal's strength, with a strength of 15 meaning a charge speed of 100%.[nl][nl]Note that this logic can be inversed by hitting the charger with a BuildCraft compatible wrench. In inversed mode the charger defaults to 100% charge speed, and a higher redstone signal will result in a slower charge speed.[nl][nl]When a tablet is placed in the charger, its first hard drive is also exposed to computers connected to the charger, similar to how §oFloppies§r in §oDisk Drives§r are. This allows copying data onto or from a tablet, if desired.
tile.oc.disassembler.usage=The §oDisassembler§r can be used to deconstruct most items in OpenComputers into their original parts. This is mostly useful to reclaim materials from old parts that are no longer useful, or to decompose devices that are either no longer needed or built broken (e.g. robots without an operating system).[nl][nl]Disassembling items takes a relatively long time, and quite some energy. It also has a certain risk to destroy the reclaimed items - this chance is applied to each extracted item - so be sure to not carelessly throw things into the disassembler.
tile.oc.diskDrive.usage=The §oDisk Drive§r can be used to read §oFloppies§r using a computer connected to the disk drive. This is useful to get started, since the lower tier computer cases do not have a built-in floppy slot, and you'll need an operating system to get started - which usually only come on floppy disks (such the craftable OpenOS one).[nl][nl]It can also be installed in robots to allow inserting an removing floppy disks into and from the robot at any time, which can be very useful, since the only other way to transfer data from a robot is using networking - for example using §oNetwork Cards§r.
tile.oc.geolyzer.usage=The §oGeolyzer§r can be used by computers to scan the terrain surrounding the geolyzer for the blocks' approximate hardness. This can be useful to generate maps of the area to display on §oHologram Projectors§r as well as to detect potentially valuable blocks (ores are usually harder than dirt and stone).[nl][nl]The geolyzer can also be installed in robots as an upgrade to allow them to scan their surroundings. Performing a scan will consume some energy, though, so using it excessivly may quickly drain a robot's batteries.
tile.oc.keyboard.usage=A §oKeyboard§r is needed to type text on §oScreens§r, be they in the world or built into devices such as §oRobots§r or §oTablets§r.[nl][nl]For a keyboard to work with a screen in the world, it has to be placed next to the screen, facing that screen, or placed directly on the screen (on top or on one of its sides). You can tell that a keyboard is "connected" to a screen if by right-clicking the keyboard the screen's GUI opens up.
tile.oc.hologram.usage=The §oHologram Projector§r is a volumetric display, i.e. it provides a three dimensional array of voxels that can be individually enabled or disabled by a connected computer. The second tier projector, while having the same resolution as the tier one projector, supports displaying the individual voxels in three different colors.[nl][nl]Holograms can be rotated along their vertical axis by hitting them with a BuildCraft compatible wrench on their top or bottom. This can save some effort, so that the output doesn't have to be transformed on the software side.
tile.oc.motionSensor.usage=The §oMotion Sensor§r allows computers to detect movement of living entities. If an entity moves faster than a set threshold, a signal will be injected into computers connected to the motion sensor. The threshold can be configured via the component the motion sensor exposes to connected computers.[nl][nl]Movement is only detected if it happens within a radius of eight blocks around the motion sensor, and if there is a direct line of sight from the block to the entity that moved.
tile.oc.powerConverter.usage=The §oPower Converter§r serves as the fastest way to convert energy from other mods' power systems to OpenComputers' internal energy. If you only run a simple computer you probably won't need a converter. If you have a large capacitor bank that you only drain every now and then, you probably won't need one, either. However, if you wish to directly power an §oAssembler§r or §oCharger§r, it is usually a good idea to use a converter, instead of directly connecting them to external power.
tile.oc.powerDistributor.usage=The §oPower Distributor§r is for energy what the §oSwitch§r is for network messages. It allows several subnetworks to share their energy, without components being exposed to computers in other networks. It operates by regularly "balancing" the energy in all subnetworks it is connected to, so that the §lrelative§r amount of energy is the same in them.
tile.oc.raid.usage=The §oRaid§r block houses three hard drives which will be combined into a single file system. This combined file system has the size of the sum of the capacities of the individual hard drives and is available to all computers connected to the raid.[nl][nl]The raid only works (and shows up as a file system) when three disks are present. The disks may differ in size.[nl][nl]Beware that adding a hard drive to the raid block will wipe it of its contents. Removing a single disk from a complete raid will also wipe the raid. Adding the disk back in will §lnot§r restore it, the raid's new file system will not contain any files.
tile.oc.redstone.usage=The §oRedstone I/O§r block can be used to remotely read and emit redstone signals. It behaves like a hybrid of a tier one and two §oRedstone Card§r, in that it can read and emit simple analog as well as bundled signals, but cannot read or emit wireless redstone signals.[nl][nl]When providing a side to the methods of the component exposed by this block, the directions are the global principal directions, i.e. it is recommended to use sides.north, sides.east and so on.[nl][nl]Like the redstone card, this block injects a signal into connected computers when the state of a redstone signal changes - both for analog as well as for bundled signals.
tile.oc.screen.usage=A §oScreen§r is used in combination with a §oGraphics Card§r to allow computers to display text. Different screen tiers have different capabilties, that being that they support different resolutions and color depths, ranging from very low resolution, monochrome displays, to very high resolutions with up to 256 different colors.[nl][nl]The available resolution and color depth depends on the weakest link. When using a tier one graphics card with a tier three screen, only the tier one resolution and color depth is usable.[nl][nl]Screens can be placed next to each other to form multi-block screens. This has no impact on the available resolution. To control how adjacent screens connect, screens can also be dyed using any dye. Screens with different colors will not connect. Screens with different tiers will never connect, even if they have the same color.[nl][nl]Tier two and tier three screens also support mouse input. Clicks can either be performed in a screen's GUI (which can only be opened if a keyboard is connected to the screen), or by sneak-activating a screen empty-handed. Note that whether the GUI opens when sneak- or normally activating a screen can be controlled via the component it exposes to connected computers.
tile.oc.serverRack.usage=A §oServer Rack§r houses up to four §oServers§r. A server is a higher tier computer, which can only run when inside a server rack. Servers can be remote controlled using a §oRemote Terminal§r. The number of terminals that can be connected to a single server at a time depends on the tier of the server. The distance up to which the remote terminals work can be configured in the rack's GUI. Higher values have a higher constant energy draw.[nl][nl]Each server in a server rack can only communicate with one "face" of the server rack at a time - or none at all. Which side each server is connected to can be configured in the server rack's GUI. Beware that the sides are from the point of view of the server rack, i.e. if you are looking at the front of the server rack, right will be to your left and vice versa.[nl][nl]Server racks act as §oSwitch§r and §oPower Distributor§r in one. The switch mode of the server rack can be configured in its GUI, with the two options being internal and external. In external mode the server rack will behave like a normal switch. In internal mode, messages are only passed to the servers in the rack, they will not be automatically relayed to the other faces of the rack. Servers will still be able to send messages to each other. This allows using server racks as advanced switches that can perform filter and mapping operations, for example.
tile.oc.switch.usage=The §oSwitch§r can be used to allow different subnetworks to send network messages to each other without exposing components to computers in other networks. Keeping components local is usually a good idea, to avoid computers using the wrong screen or to avoid component overflows to happen (in which computers will crash / not start anymore).[nl][nl]There is also a wireless variation of this block, the §oAccess Point§r, which will also relay messages wirelessly.[nl][nl]Switches and access point do §lnot§r keep track of which packets they relayed recently, so avoid cycles in your network, or you may receive the same packet multiple times.[nl][nl]Packets are only re-sent a certain number of times, so chaining an arbitrary number of switches or access points is not possible.

#Achievements
achievement.oc.adapter=Plug In Baby
achievement.oc.adapter.desc=Interact with blocks from other mods and even vanilla Minecraft!
achievement.oc.assembler=Wonderful
achievement.oc.assembler.desc=Time to take over the world!
achievement.oc.cable=Not a Dirty Wire
achievement.oc.cable.desc=With patented anti-cable-spaghetti technology.
achievement.oc.capacitor=Batteries included
achievement.oc.capacitor.desc=You cannot stop it.
achievement.oc.card=We Accept Cards
achievement.oc.card.desc=For your convenience. No ulterior motive, promise.
achievement.oc.case=In Case of Trouble
achievement.oc.case.desc=Because cuboid towers are the best.
achievement.oc.charger=All right, let's do this
achievement.oc.charger.desc=Chaaaaaaaaaarg- dang, forgot the redstone signal again.
achievement.oc.chip=All the Small Things
achievement.oc.chip.desc=Because vacuum tubes are so yesteryear.
achievement.oc.cpu=Overclocked
achievement.oc.cpu.desc=Time to make good use of those computing cycles.
achievement.oc.disassembler=Scratch That
achievement.oc.disassembler.desc=In case one of your brilliant ideas turns out to be not that brilliant after all.
achievement.oc.diskDrive=Roundabout
achievement.oc.diskDrive.desc=Inferior capacity but such delicious sound.
achievement.oc.drone=Fly Away
achievement.oc.drone.desc=Keep calm and nuke it from orbit.
achievement.oc.eeprom=There can be only one
achievement.oc.eeprom.desc=Per computer, that is. For deterministic boot order, you know?
achievement.oc.floppy=The One Ri- Disk
achievement.oc.floppy.desc=Not to be confused with Flappy.
achievement.oc.geolyzer=Down to Earth
achievement.oc.geolyzer.desc=It has extraordinary qualities.
achievement.oc.graphicsCard=LastGen
achievement.oc.graphicsCard.desc=The way it's meant to be... uh... rendered. Yeah. That.
achievement.oc.hdd=Hot Dog Dealer
achievement.oc.hdd.desc=No wait, that's not what that meant. Hang on, almost got it...
achievement.oc.hologram=Next Dimension
achievement.oc.hologram.desc=Because 2D is boring. Or is it?
achievement.oc.keyboard=DirtCatcher3000
achievement.oc.keyboard.desc=It is highly recommended to resist the urge to flip them around and shake them.
achievement.oc.microcontroller=Little Sister
achievement.oc.microcontroller.desc=The small sibling of computers.
achievement.oc.motionSensor=Got the Moves
achievement.oc.motionSensor.desc=Like Steve Swagger.
achievement.oc.networkCard=Now We're Talking!
achievement.oc.networkCard.desc=Keep in touch with those distant relatives via transitive relations.
achievement.oc.openOS=Boot
achievement.oc.openOS.desc=One OS to - wait, I used that one already? Dang.
achievement.oc.powerDistributor=Sharing is Caring
achievement.oc.powerDistributor.desc=When you need some help balancing all that power.
achievement.oc.rack=Dat Rack
achievement.oc.rack.desc=I don't know what you're thinking of, I clearly meant the server rack.
achievement.oc.raid=LFG
achievement.oc.raid.desc=Heroic plzkthx.
achievement.oc.ram=Random Access Memories
achievement.oc.ram.desc=Congratulations, you're Doin' It Right.
achievement.oc.redstoneCard=Contact
achievement.oc.redstoneCard.desc=Time to go analog.
achievement.oc.redstoneIO=The Outsider
achievement.oc.redstoneIO.desc=Taking redstone signals where you want them.
achievement.oc.robot=Beep Boop
achievement.oc.robot.desc=EXTERMINATE!
achievement.oc.screen=Have you tried turning it of and on again?
achievement.oc.screen.desc=No seriously. A redstone pulse can toggle a screen's power, after all.
achievement.oc.server=Dedicated
achievement.oc.server.desc=Cloud services, here we come.
achievement.oc.switch=Complex Topology
achievement.oc.switch.desc=Avoid fragile goods due to possibility of dropped packets.
achievement.oc.tablet=Do Not Swallow
achievement.oc.tablet.desc=Also keep away from small children to avoid unexpected overdrawing of your credit card.
achievement.oc.transistor=Tell Red I said "Hi."
achievement.oc.transistor.desc=Create a Transistor to get started. Then listen to the soundtrack. No need to thank me.
achievement.oc.wirelessNetworkCard=Signals
achievement.oc.wirelessNetworkCard.desc=Time to go where no packet has gone before.

# NEI Integration
nei.options.inventory.oredict=Show OreDictionary names
nei.options.inventory.oredict.true=True
nei.options.inventory.oredict.false=False

# Waila Integration
option.oc.address=Address
option.oc.componentName=Component Name
option.oc.energy=Energy